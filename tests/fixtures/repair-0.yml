interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Type:
      - application/json
      Host:
      - pulp3-sandbox-debian10
      User-Agent:
      - Python-urllib/3.8
    method: GET
    uri: http://pulp.example.org/pulp/api/v3/docs/api.json
  response:
    body:
      string: '{"swagger": "2.0", "info": {"title": "Pulp 3 API", "license": {"name":
        "GPLv2+"}, "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"},
        "version": "v3"}, "host": "pulp3-sandbox-debian10", "schemes": ["http"], "basePath":
        "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions":
        {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/ansible/collections/":
        {"post": {"operationId": "upload_collection", "summary": "Upload a collection",
        "description": "Create an artifact and trigger an asynchronous task to create
        Collection content from it.", "parameters": [{"name": "file", "in": "formData",
        "description": "The Collection tarball.", "required": true, "type": "file"},
        {"name": "sha256", "in": "formData", "description": "An optional sha256 checksum
        of the uploaded file.", "required": false, "type": "string", "minLength":
        1}, {"name": "expected_namespace", "in": "formData", "description": "The expected
        ''namespace'' of the Collection to be verified against the metadata during
        import.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_name",
        "in": "formData", "description": "The expected ''name'' of the Collection
        to be verified against the metadata during import.", "required": false, "type":
        "string", "minLength": 1}, {"name": "expected_version", "in": "formData",
        "description": "The expected version of the Collection to be verified against
        the metadata during import.", "required": false, "type": "string", "minLength":
        1}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"],
        "tags": ["ansible: collections"]}, "parameters": []}, "/pulp/api/v3/ansible/collections/":
        {"get": {"operationId": "ansible_collections_list", "summary": "List collections",
        "description": "Viewset for Ansible Collections.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "namespace",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name", "in": "query", "description": "", "required": false, "type": "string"},
        {"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/ansible.CollectionRead"}}}}}}, "tags":
        ["ansible: collections"]}, "parameters": []}, "{collection_href}": {"get":
        {"operationId": "pulp_ansible_galaxy_api_v2_collections_read", "description":
        "Get the detail view of a Collection.", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/GalaxyCollectionRead"}}}, "tags": ["pulp_ansible:
        galaxy api collections"]}, "parameters": [{"name": "collection_href", "in":
        "path", "description": "URI of Collection. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/artifacts/": {"get":
        {"operationId": "artifacts_list", "summary": "List artifacts", "description":
        "", "parameters": [{"name": "ordering", "in": "query", "description": "Which
        field to use when ordering the results.", "required": false, "type": "string"},
        {"name": "repository_version", "in": "query", "description": "Repository Version
        referenced by HREF", "required": false, "type": "string"}, {"name": "md5",
        "in": "query", "description": "Filter results where md5 matches value", "required":
        false, "type": "string"}, {"name": "sha1", "in": "query", "description": "Filter
        results where sha1 matches value", "required": false, "type": "string"}, {"name":
        "sha224", "in": "query", "description": "Filter results where sha224 matches
        value", "required": false, "type": "string"}, {"name": "sha256", "in": "query",
        "description": "Filter results where sha256 matches value", "required": false,
        "type": "string"}, {"name": "sha384", "in": "query", "description": "Filter
        results where sha384 matches value", "required": false, "type": "string"},
        {"name": "sha512", "in": "query", "description": "Filter results where sha512
        matches value", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/ArtifactRead"}}}}}}, "tags": ["artifacts"]}, "post": {"operationId":
        "artifacts_create", "summary": "Create an artifact", "description": "", "parameters":
        [{"name": "file", "in": "formData", "description": "The stored file.", "required":
        true, "type": "file"}, {"name": "size", "in": "formData", "description": "The
        size of the file in bytes.", "required": false, "type": "integer"}, {"name":
        "md5", "in": "formData", "description": "The MD5 checksum of the file if available.",
        "required": false, "type": "string", "minLength": 1, "x-nullable": true},
        {"name": "sha1", "in": "formData", "description": "The SHA-1 checksum of the
        file if available.", "required": false, "type": "string", "minLength": 1,
        "x-nullable": true}, {"name": "sha224", "in": "formData", "description": "The
        SHA-224 checksum of the file if available.", "required": false, "type": "string",
        "minLength": 1, "x-nullable": true}, {"name": "sha256", "in": "formData",
        "description": "The SHA-256 checksum of the file if available.", "required":
        false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha384",
        "in": "formData", "description": "The SHA-384 checksum of the file if available.",
        "required": false, "type": "string", "minLength": 1, "x-nullable": true},
        {"name": "sha512", "in": "formData", "description": "The SHA-512 checksum
        of the file if available.", "required": false, "type": "string", "minLength":
        1, "x-nullable": true}], "responses": {"201": {"description": "", "schema":
        {"$ref": "#/definitions/ArtifactRead"}}}, "consumes": ["multipart/form-data",
        "application/x-www-form-urlencoded"], "tags": ["artifacts"]}, "parameters":
        []}, "{artifact_href}": {"get": {"operationId": "artifacts_read", "summary":
        "Inspect an artifact", "description": "", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/ArtifactRead"}}}, "tags": ["artifacts"]}, "delete":
        {"operationId": "artifacts_delete", "summary": "Delete an artifact", "description":
        "Remove Artifact only if it is not associated with any Content.", "parameters":
        [], "responses": {"204": {"description": ""}}, "tags": ["artifacts"]}, "parameters":
        [{"name": "artifact_href", "in": "path", "description": "URI of Artifact.
        e.g.: /pulp/api/v3/artifacts/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/collection_versions/":
        {"get": {"operationId": "content_ansible_collection_versions_list", "summary":
        "List collection versions", "description": "ViewSet for Ansible Collection.",
        "parameters": [{"name": "ordering", "in": "query", "description": "Which field
        to use when ordering the results.", "required": false, "type": "string"},
        {"name": "namespace", "in": "query", "description": "", "required": false,
        "type": "string"}, {"name": "name", "in": "query", "description": "", "required":
        false, "type": "string"}, {"name": "version", "in": "query", "description":
        "Filter results where version matches value", "required": false, "type": "string"},
        {"name": "q", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "is_highest", "in": "query", "description": "", "required":
        false, "type": "string"}, {"name": "certification", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "tags", "in": "query",
        "description": "Filter by comma separate list of tags that must all be matched",
        "required": false, "type": "string"}, {"name": "repository_version", "in":
        "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "repository_version_added", "in": "query",
        "description": "Repository Version referenced by HREF", "required": false,
        "type": "string"}, {"name": "repository_version_removed", "in": "query", "description":
        "Repository Version referenced by HREF", "required": false, "type": "string"},
        {"name": "deprecated", "in": "query", "description": "", "required": false,
        "type": "string"}, {"name": "limit", "in": "query", "description": "Number
        of results to return per page.", "required": false, "type": "integer"}, {"name":
        "offset", "in": "query", "description": "The initial index from which to return
        the results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/ansible.CollectionVersionRead"}}}}}},
        "tags": ["content: collection_versions"]}, "post": {"operationId": "content_ansible_collection_versions_create",
        "summary": "Create a collection version", "description": "ViewSet for Ansible
        Collection.", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.CollectionVersion"}}], "responses":
        {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionVersionRead"}}},
        "tags": ["content: collection_versions"]}, "parameters": []}, "{collection_version_href}":
        {"get": {"operationId": "content_ansible_collection_versions_read", "summary":
        "Inspect a collection version", "description": "ViewSet for Ansible Collection.",
        "parameters": [{"name": "fields", "in": "query", "description": "A list of
        fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionVersionRead"}}},
        "tags": ["content: collection_versions"]}, "parameters": [{"name": "collection_version_href",
        "in": "path", "description": "URI of Collection Version. e.g.: /pulp/api/v3/content/ansible/collection_versions/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/roles/":
        {"get": {"operationId": "content_ansible_roles_list", "summary": "List roles",
        "description": "ViewSet for Role.", "parameters": [{"name": "ordering", "in":
        "query", "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "name", "in": "query", "description": "Filter
        results where name matches value", "required": false, "type": "string"}, {"name":
        "namespace", "in": "query", "description": "Filter results where namespace
        matches value", "required": false, "type": "string"}, {"name": "version",
        "in": "query", "description": "Filter results where version matches value",
        "required": false, "type": "string"}, {"name": "repository_version", "in":
        "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "repository_version_added", "in": "query",
        "description": "Repository Version referenced by HREF", "required": false,
        "type": "string"}, {"name": "repository_version_removed", "in": "query", "description":
        "Repository Version referenced by HREF", "required": false, "type": "string"},
        {"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/ansible.RoleRead"}}}}}}, "tags":
        ["content: roles"]}, "post": {"operationId": "content_ansible_roles_create",
        "summary": "Create a role", "description": "ViewSet for Role.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.Role"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.RoleRead"}}},
        "tags": ["content: roles"]}, "parameters": []}, "{role_href}": {"get": {"operationId":
        "content_ansible_roles_read", "summary": "Inspect a role", "description":
        "ViewSet for Role.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.RoleRead"}}},
        "tags": ["content: roles"]}, "parameters": [{"name": "role_href", "in": "path",
        "description": "URI of Role. e.g.: /pulp/api/v3/content/ansible/roles/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/content/container/blobs/":
        {"get": {"operationId": "content_container_blobs_list", "summary": "List blobs",
        "description": "ViewSet for Blobs.", "parameters": [{"name": "ordering", "in":
        "query", "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "digest", "in": "query", "description":
        "Filter results where digest matches value", "required": false, "type": "string"},
        {"name": "digest__in", "in": "query", "description": "Filter results where
        digest is in a comma-separated list of values", "required": false, "type":
        "string"}, {"name": "repository_version", "in": "query", "description": "Repository
        Version referenced by HREF", "required": false, "type": "string"}, {"name":
        "repository_version_added", "in": "query", "description": "Repository Version
        referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed",
        "in": "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "media_type", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "limit", "in": "query",
        "description": "Number of results to return per page.", "required": false,
        "type": "integer"}, {"name": "offset", "in": "query", "description": "The
        initial index from which to return the results.", "required": false, "type":
        "integer"}, {"name": "fields", "in": "query", "description": "A list of fields
        to include in the response.", "required": false, "type": "string"}, {"name":
        "exclude_fields", "in": "query", "description": "A list of fields to exclude
        from the response.", "required": false, "type": "string"}], "responses": {"200":
        {"description": "", "schema": {"required": ["count", "results"], "type": "object",
        "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format":
        "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri",
        "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/container.BlobRead"}}}}}},
        "tags": ["content: blobs"]}, "parameters": []}, "{blob_href}": {"get": {"operationId":
        "content_container_blobs_read", "summary": "Inspect a blob", "description":
        "ViewSet for Blobs.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.BlobRead"}}},
        "tags": ["content: blobs"]}, "parameters": [{"name": "blob_href", "in": "path",
        "description": "URI of Blob. e.g.: /pulp/api/v3/content/container/blobs/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/content/container/manifests/":
        {"get": {"operationId": "content_container_manifests_list", "summary": "List
        manifests", "description": "ViewSet for Manifest.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "digest", "in":
        "query", "description": "Filter results where digest matches value", "required":
        false, "type": "string"}, {"name": "digest__in", "in": "query", "description":
        "Filter results where digest is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "repository_version", "in": "query", "description":
        "Repository Version referenced by HREF", "required": false, "type": "string"},
        {"name": "repository_version_added", "in": "query", "description": "Repository
        Version referenced by HREF", "required": false, "type": "string"}, {"name":
        "repository_version_removed", "in": "query", "description": "Repository Version
        referenced by HREF", "required": false, "type": "string"}, {"name": "media_type",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/container.ManifestRead"}}}}}}, "tags": ["content: manifests"]},
        "parameters": []}, "{manifest_href}": {"get": {"operationId": "content_container_manifests_read",
        "summary": "Inspect a manifest", "description": "ViewSet for Manifest.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/container.ManifestRead"}}}, "tags":
        ["content: manifests"]}, "parameters": [{"name": "manifest_href", "in": "path",
        "description": "URI of Manifest. e.g.: /pulp/api/v3/content/container/manifests/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/content/container/tags/":
        {"get": {"operationId": "content_container_tags_list", "summary": "List tags",
        "description": "ViewSet for Tag.", "parameters": [{"name": "ordering", "in":
        "query", "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "name", "in": "query", "description": "Filter
        results where name matches value", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "repository_version", "in": "query", "description": "Repository Version referenced
        by HREF", "required": false, "type": "string"}, {"name": "repository_version_added",
        "in": "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "repository_version_removed", "in": "query",
        "description": "Repository Version referenced by HREF", "required": false,
        "type": "string"}, {"name": "media_type", "in": "query", "description": "",
        "required": false, "type": "string"}, {"name": "digest", "in": "query", "description":
        "Multiple values may be separated by commas.", "required": false, "type":
        "string"}, {"name": "limit", "in": "query", "description": "Number of results
        to return per page.", "required": false, "type": "integer"}, {"name": "offset",
        "in": "query", "description": "The initial index from which to return the
        results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/container.TagRead"}}}}}}, "tags":
        ["content: tags"]}, "parameters": []}, "{tag_href}": {"get": {"operationId":
        "content_container_tags_read", "summary": "Inspect a tag", "description":
        "ViewSet for Tag.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/container.TagRead"}}},
        "tags": ["content: tags"]}, "parameters": [{"name": "tag_href", "in": "path",
        "description": "URI of Tag. e.g.: /pulp/api/v3/content/container/tags/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/content/file/files/":
        {"get": {"operationId": "content_file_files_list", "summary": "List file contents",
        "description": "\nFileContent represents a single file and its metadata, which
        can be added and removed from\nrepositories.", "parameters": [{"name": "ordering",
        "in": "query", "description": "Which field to use when ordering the results.",
        "required": false, "type": "string"}, {"name": "relative_path", "in": "query",
        "description": "Filter results where relative_path matches value", "required":
        false, "type": "string"}, {"name": "sha256", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "repository_version", "in":
        "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "repository_version_added", "in": "query",
        "description": "Repository Version referenced by HREF", "required": false,
        "type": "string"}, {"name": "repository_version_removed", "in": "query", "description":
        "Repository Version referenced by HREF", "required": false, "type": "string"},
        {"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/file.FileContentRead"}}}}}}, "tags":
        ["content: files"]}, "post": {"operationId": "content_file_files_create",
        "summary": "Create a file content", "description": "Trigger an asynchronous
        task to create content,optionally create new repository version.", "parameters":
        [{"name": "artifact", "in": "formData", "description": "Artifact file representing
        the physical content", "required": false, "type": "string", "format": "uri"},
        {"name": "relative_path", "in": "formData", "description": "Path where the
        artifact is located relative to distributions base_path", "required": true,
        "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description":
        "An uploaded file that may be turned into the artifact of the content unit.",
        "required": false, "type": "file"}, {"name": "repository", "in": "formData",
        "description": "A URI of a repository the new content unit should be associated
        with.", "required": false, "type": "string", "format": "uri"}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"],
        "tags": ["content: files"]}, "parameters": []}, "{file_content_href}": {"get":
        {"operationId": "content_file_files_read", "summary": "Inspect a file content",
        "description": "\nFileContent represents a single file and its metadata, which
        can be added and removed from\nrepositories.", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/file.FileContentRead"}}}, "tags": ["content: files"]},
        "parameters": [{"name": "file_content_href", "in": "path", "description":
        "URI of File Content. e.g.: /pulp/api/v3/content/file/files/1/", "required":
        true, "type": "string"}]}, "/pulp/api/v3/content/python/packages/": {"get":
        {"operationId": "content_python_packages_list", "summary": "List python package
        contents", "description": "\nPythonPackageContent represents each individually
        installable Python package. In the Python\necosystem, this is called a Python
        Distribution, sometimes (ambiguously) refered to as a\npackage. In Pulp Python,
        we refer to it as PythonPackageContent. Each\nPythonPackageContent corresponds
        to a single filename, for example\n`pulpcore-3.0.0rc1-py3-none-any.whl` or
        `pulpcore-3.0.0rc1.tar.gz`.", "parameters": [{"name": "ordering", "in": "query",
        "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "name", "in": "query", "description": "Filter
        results where name matches value", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "author", "in": "query", "description": "Filter results where author matches
        value", "required": false, "type": "string"}, {"name": "author__in", "in":
        "query", "description": "Filter results where author is in a comma-separated
        list of values", "required": false, "type": "string"}, {"name": "packagetype",
        "in": "query", "description": "Filter results where packagetype matches value",
        "required": false, "type": "string"}, {"name": "packagetype__in", "in": "query",
        "description": "Filter results where packagetype is in a comma-separated list
        of values", "required": false, "type": "string"}, {"name": "filename", "in":
        "query", "description": "Filter results where filename matches value", "required":
        false, "type": "string"}, {"name": "filename__in", "in": "query", "description":
        "Filter results where filename is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "filename__contains", "in": "query", "description":
        "Filter results where filename contains value", "required": false, "type":
        "string"}, {"name": "keywords__in", "in": "query", "description": "Filter
        results where keywords is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "keywords__contains", "in": "query", "description":
        "Filter results where keywords contains value", "required": false, "type":
        "string"}, {"name": "repository_version", "in": "query", "description": "Repository
        Version referenced by HREF", "required": false, "type": "string"}, {"name":
        "repository_version_added", "in": "query", "description": "Repository Version
        referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed",
        "in": "query", "description": "Repository Version referenced by HREF", "required":
        false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonPackageContentRead"}}}}}},
        "tags": ["content: packages"]}, "post": {"operationId": "content_python_packages_create",
        "summary": "Create a python package content", "description": "Trigger an asynchronous
        task to create content,optionally create new repository version.", "parameters":
        [{"name": "artifact", "in": "formData", "description": "Artifact file representing
        the physical content", "required": false, "type": "string", "format": "uri"},
        {"name": "relative_path", "in": "formData", "description": "Path where the
        artifact is located relative to distributions base_path", "required": true,
        "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description":
        "An uploaded file that may be turned into the artifact of the content unit.",
        "required": false, "type": "file"}, {"name": "repository", "in": "formData",
        "description": "A URI of a repository the new content unit should be associated
        with.", "required": false, "type": "string", "format": "uri"}, {"name": "filename",
        "in": "formData", "description": "The name of the distribution package, usually
        of the format: {distribution}-{version}(-{build tag})?-{python tag}-{abi tag}-{platform
        tag}.{packagetype}", "required": true, "type": "string", "minLength": 1},
        {"name": "summary", "in": "formData", "description": "A one-line summary of
        what the package does.", "required": false, "type": "string"}, {"name": "description",
        "in": "formData", "description": "A longer description of the package that
        can run to several paragraphs.", "required": false, "type": "string"}, {"name":
        "keywords", "in": "formData", "description": "Additional keywords to be used
        to assist searching for the package in a larger catalog.", "required": false,
        "type": "string"}, {"name": "home_page", "in": "formData", "description":
        "The URL for the package''s home page.", "required": false, "type": "string"},
        {"name": "download_url", "in": "formData", "description": "Legacy field denoting
        the URL from which this package can be downloaded.", "required": false, "type":
        "string"}, {"name": "author", "in": "formData", "description": "Text containing
        the author''s name. Contact information can also be added, separated with
        newlines.", "required": false, "type": "string"}, {"name": "author_email",
        "in": "formData", "description": "The author''s e-mail address. ", "required":
        false, "type": "string"}, {"name": "maintainer", "in": "formData", "description":
        "The maintainer''s name at a minimum; additional contact information may be
        provided.", "required": false, "type": "string"}, {"name": "maintainer_email",
        "in": "formData", "description": "The maintainer''s e-mail address.", "required":
        false, "type": "string"}, {"name": "license", "in": "formData", "description":
        "Text indicating the license covering the distribution", "required": false,
        "type": "string"}, {"name": "requires_python", "in": "formData", "description":
        "The Python version(s) that the distribution is guaranteed to be compatible
        with.", "required": false, "type": "string"}, {"name": "project_url", "in":
        "formData", "description": "A browsable URL for the project and a label for
        it, separated by a comma.", "required": false, "type": "string"}, {"name":
        "platform", "in": "formData", "description": "A comma-separated list of platform
        specifications, summarizing the operating systems supported by the package.",
        "required": false, "type": "string"}, {"name": "supported_platform", "in":
        "formData", "description": "Field to specify the OS and CPU for which the
        binary package was compiled. ", "required": false, "type": "string"}, {"name":
        "requires_dist", "in": "formData", "description": "A JSON list containing
        names of some other distutils project required by this distribution.", "required":
        false, "type": "string", "default": []}, {"name": "provides_dist", "in": "formData",
        "description": "A JSON list containing names of a Distutils project which
        is contained within this distribution.", "required": false, "type": "string",
        "default": []}, {"name": "obsoletes_dist", "in": "formData", "description":
        "A JSON list containing names of a distutils project''s distribution which
        this distribution renders obsolete, meaning that the two projects should not
        be installed at the same time.", "required": false, "type": "string", "default":
        []}, {"name": "requires_external", "in": "formData", "description": "A JSON
        list containing some dependency in the system that the distribution is to
        be used.", "required": false, "type": "string", "default": []}, {"name": "classifiers",
        "in": "formData", "description": "A JSON list containing classification values
        for a Python package.", "required": false, "type": "string", "default": []}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"],
        "tags": ["content: packages"]}, "parameters": []}, "{python_package_content_href}":
        {"get": {"operationId": "content_python_packages_read", "summary": "Inspect
        a python package content", "description": "\nPythonPackageContent represents
        each individually installable Python package. In the Python\necosystem, this
        is called a Python Distribution, sometimes (ambiguously) refered to as a\npackage.
        In Pulp Python, we refer to it as PythonPackageContent. Each\nPythonPackageContent
        corresponds to a single filename, for example\n`pulpcore-3.0.0rc1-py3-none-any.whl`
        or `pulpcore-3.0.0rc1.tar.gz`.", "parameters": [{"name": "fields", "in": "query",
        "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonPackageContentRead"}}},
        "tags": ["content: packages"]}, "parameters": [{"name": "python_package_content_href",
        "in": "path", "description": "URI of Python Package Content. e.g.: /pulp/api/v3/content/python/packages/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/contentguards/certguard/rhsm/":
        {"get": {"operationId": "contentguards_certguard_rhsm_list", "summary": "List
        rhsm cert guards", "description": "RHSMCertGuard API Viewsets.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/certguard.RHSMCertGuardRead"}}}}}}, "tags": ["contentguards:
        rhsm"]}, "post": {"operationId": "contentguards_certguard_rhsm_create", "summary":
        "Create a rhsm cert guard", "description": "RHSMCertGuard API Viewsets.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/certguard.RHSMCertGuard"}}], "responses": {"201":
        {"description": "", "schema": {"$ref": "#/definitions/certguard.RHSMCertGuardRead"}}},
        "tags": ["contentguards: rhsm"]}, "parameters": []}, "{r_h_s_m_cert_guard_href}":
        {"get": {"operationId": "contentguards_certguard_rhsm_read", "summary": "Inspect
        a rhsm cert guard", "description": "RHSMCertGuard API Viewsets.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/certguard.RHSMCertGuardRead"}}}, "tags":
        ["contentguards: rhsm"]}, "put": {"operationId": "contentguards_certguard_rhsm_update",
        "summary": "Update a rhsm cert guard", "description": "RHSMCertGuard API Viewsets.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/certguard.RHSMCertGuard"}}], "responses": {"200":
        {"description": "", "schema": {"$ref": "#/definitions/certguard.RHSMCertGuardRead"}}},
        "tags": ["contentguards: rhsm"]}, "patch": {"operationId": "contentguards_certguard_rhsm_partial_update",
        "summary": "Partially update a rhsm cert guard", "description": "RHSMCertGuard
        API Viewsets.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/certguard.RHSMCertGuard"}}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/certguard.RHSMCertGuardRead"}}},
        "tags": ["contentguards: rhsm"]}, "delete": {"operationId": "contentguards_certguard_rhsm_delete",
        "summary": "Delete a rhsm cert guard", "description": "RHSMCertGuard API Viewsets.",
        "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["contentguards:
        rhsm"]}, "parameters": [{"name": "r_h_s_m_cert_guard_href", "in": "path",
        "description": "URI of R H S M Cert Guard. e.g.: /pulp/api/v3/contentguards/certguard/rhsm/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/contentguards/certguard/x509/":
        {"get": {"operationId": "contentguards_certguard_x509_list", "summary": "List
        x509 cert guards", "description": "X509CertGuard API Viewsets.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/certguard.X509CertGuardRead"}}}}}}, "tags": ["contentguards:
        x509"]}, "post": {"operationId": "contentguards_certguard_x509_create", "summary":
        "Create a x509 cert guard", "description": "X509CertGuard API Viewsets.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/certguard.X509CertGuard"}}], "responses": {"201":
        {"description": "", "schema": {"$ref": "#/definitions/certguard.X509CertGuardRead"}}},
        "tags": ["contentguards: x509"]}, "parameters": []}, "{x509_cert_guard_href}":
        {"get": {"operationId": "contentguards_certguard_x509_read", "summary": "Inspect
        a x509 cert guard", "description": "X509CertGuard API Viewsets.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/certguard.X509CertGuardRead"}}}, "tags":
        ["contentguards: x509"]}, "put": {"operationId": "contentguards_certguard_x509_update",
        "summary": "Update a x509 cert guard", "description": "X509CertGuard API Viewsets.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/certguard.X509CertGuard"}}], "responses": {"200":
        {"description": "", "schema": {"$ref": "#/definitions/certguard.X509CertGuardRead"}}},
        "tags": ["contentguards: x509"]}, "patch": {"operationId": "contentguards_certguard_x509_partial_update",
        "summary": "Partially update a x509 cert guard", "description": "X509CertGuard
        API Viewsets.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/certguard.X509CertGuard"}}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/certguard.X509CertGuardRead"}}},
        "tags": ["contentguards: x509"]}, "delete": {"operationId": "contentguards_certguard_x509_delete",
        "summary": "Delete a x509 cert guard", "description": "X509CertGuard API Viewsets.",
        "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["contentguards:
        x509"]}, "parameters": [{"name": "x509_cert_guard_href", "in": "path", "description":
        "URI of X509 Cert Guard. e.g.: /pulp/api/v3/contentguards/certguard/x509/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/ansible/ansible/":
        {"get": {"operationId": "distributions_ansible_ansible_list", "summary": "List
        ansible distributions", "description": "ViewSet for Ansible Distributions.",
        "parameters": [{"name": "ordering", "in": "query", "description": "Which field
        to use when ordering the results.", "required": false, "type": "string"},
        {"name": "name", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "name__in", "in": "query", "description": "Filter results
        where name is in a comma-separated list of values", "required": false, "type":
        "string"}, {"name": "base_path", "in": "query", "description": "", "required":
        false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description":
        "Filter results where base_path contains value", "required": false, "type":
        "string"}, {"name": "base_path__icontains", "in": "query", "description":
        "Filter results where base_path contains value", "required": false, "type":
        "string"}, {"name": "base_path__in", "in": "query", "description": "Filter
        results where base_path is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.AnsibleDistributionRead"}}}}}},
        "tags": ["distributions: ansible"]}, "post": {"operationId": "distributions_ansible_ansible_create",
        "summary": "Create an ansible distribution", "description": "Trigger an asynchronous
        create task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: ansible"]}, "parameters": []}, "{ansible_distribution_href}":
        {"get": {"operationId": "distributions_ansible_ansible_read", "summary": "Inspect
        an ansible distribution", "description": "ViewSet for Ansible Distributions.",
        "parameters": [{"name": "fields", "in": "query", "description": "A list of
        fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleDistributionRead"}}},
        "tags": ["distributions: ansible"]}, "put": {"operationId": "distributions_ansible_ansible_update",
        "summary": "Update an ansible distribution", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: ansible"]}, "patch": {"operationId": "distributions_ansible_ansible_partial_update",
        "summary": "Partially update an ansible distribution", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: ansible"]}, "delete": {"operationId": "distributions_ansible_ansible_delete",
        "summary": "Delete an ansible distribution", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions:
        ansible"]}, "parameters": [{"name": "ansible_distribution_href", "in": "path",
        "description": "URI of Ansible Distribution. e.g.: /pulp/api/v3/distributions/ansible/ansible/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/container/container/":
        {"get": {"operationId": "distributions_container_container_list", "summary":
        "List container distributions", "description": "The Container Distribution
        will serve the latest version of a Repository if\n``repository`` is specified.
        The Container Distribution will serve a specific\nrepository version if ``repository_version``.
        Note that **either**\n``repository`` or ``repository_version`` can be set
        on a Container\nDistribution, but not both.", "parameters": [{"name": "ordering",
        "in": "query", "description": "Which field to use when ordering the results.",
        "required": false, "type": "string"}, {"name": "name", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "name__in", "in": "query",
        "description": "Filter results where name is in a comma-separated list of
        values", "required": false, "type": "string"}, {"name": "base_path", "in":
        "query", "description": "", "required": false, "type": "string"}, {"name":
        "base_path__contains", "in": "query", "description": "Filter results where
        base_path contains value", "required": false, "type": "string"}, {"name":
        "base_path__icontains", "in": "query", "description": "Filter results where
        base_path contains value", "required": false, "type": "string"}, {"name":
        "base_path__in", "in": "query", "description": "Filter results where base_path
        is in a comma-separated list of values", "required": false, "type": "string"},
        {"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/container.ContainerDistributionRead"}}}}}},
        "tags": ["distributions: container"]}, "post": {"operationId": "distributions_container_container_create",
        "summary": "Create a container distribution", "description": "Trigger an asynchronous
        create task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: container"]}, "parameters": []}, "{container_distribution_href}":
        {"get": {"operationId": "distributions_container_container_read", "summary":
        "Inspect a container distribution", "description": "The Container Distribution
        will serve the latest version of a Repository if\n``repository`` is specified.
        The Container Distribution will serve a specific\nrepository version if ``repository_version``.
        Note that **either**\n``repository`` or ``repository_version`` can be set
        on a Container\nDistribution, but not both.", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/container.ContainerDistributionRead"}}}, "tags": ["distributions:
        container"]}, "put": {"operationId": "distributions_container_container_update",
        "summary": "Update a container distribution", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: container"]}, "patch": {"operationId": "distributions_container_container_partial_update",
        "summary": "Partially update a container distribution", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerDistribution"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: container"]}, "delete": {"operationId": "distributions_container_container_delete",
        "summary": "Delete a container distribution", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions:
        container"]}, "parameters": [{"name": "container_distribution_href", "in":
        "path", "description": "URI of Container Distribution. e.g.: /pulp/api/v3/distributions/container/container/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/file/file/":
        {"get": {"operationId": "distributions_file_file_list", "summary": "List file
        distributions", "description": "\nFileDistributions host File\nPublications
        which makes the metadata and the referenced File Content available to HTTP\nclients.
        Additionally, a FileDistribution with an associated FilePublication can be
        the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync
        the content.", "parameters": [{"name": "ordering", "in": "query", "description":
        "Which field to use when ordering the results.", "required": false, "type":
        "string"}, {"name": "name", "in": "query", "description": "", "required":
        false, "type": "string"}, {"name": "name__in", "in": "query", "description":
        "Filter results where name is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "base_path", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "base_path__contains",
        "in": "query", "description": "Filter results where base_path contains value",
        "required": false, "type": "string"}, {"name": "base_path__icontains", "in":
        "query", "description": "Filter results where base_path contains value", "required":
        false, "type": "string"}, {"name": "base_path__in", "in": "query", "description":
        "Filter results where base_path is in a comma-separated list of values", "required":
        false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileDistributionRead"}}}}}},
        "tags": ["distributions: file"]}, "post": {"operationId": "distributions_file_file_create",
        "summary": "Create a file distribution", "description": "Trigger an asynchronous
        create task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: file"]}, "parameters": []}, "{file_distribution_href}":
        {"get": {"operationId": "distributions_file_file_read", "summary": "Inspect
        a file distribution", "description": "\nFileDistributions host File\nPublications
        which makes the metadata and the referenced File Content available to HTTP\nclients.
        Additionally, a FileDistribution with an associated FilePublication can be
        the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync
        the content.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileDistributionRead"}}},
        "tags": ["distributions: file"]}, "put": {"operationId": "distributions_file_file_update",
        "summary": "Update a file distribution", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: file"]}, "patch": {"operationId": "distributions_file_file_partial_update",
        "summary": "Partially update a file distribution", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: file"]}, "delete": {"operationId": "distributions_file_file_delete",
        "summary": "Delete a file distribution", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions:
        file"]}, "parameters": [{"name": "file_distribution_href", "in": "path", "description":
        "URI of File Distribution. e.g.: /pulp/api/v3/distributions/file/file/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/python/pypi/":
        {"get": {"operationId": "distributions_python_pypi_list", "summary": "List
        python distributions", "description": "\nPulp Python Distributions are used
        to distribute\nPython Publications.  Pulp Python\nDistributions should not
        be confused with \"Python Distribution\" as defined by the Python\ncommunity.
        In Pulp usage, Python content is refered to as Python Package Content.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "base_path", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter
        results where base_path contains value", "required": false, "type": "string"},
        {"name": "base_path__icontains", "in": "query", "description": "Filter results
        where base_path contains value", "required": false, "type": "string"}, {"name":
        "base_path__in", "in": "query", "description": "Filter results where base_path
        is in a comma-separated list of values", "required": false, "type": "string"},
        {"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/python.PythonDistributionRead"}}}}}},
        "tags": ["distributions: pypi"]}, "post": {"operationId": "distributions_python_pypi_create",
        "summary": "Create a python distribution", "description": "Trigger an asynchronous
        create task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/python.PythonDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: pypi"]}, "parameters": []}, "{python_distribution_href}":
        {"get": {"operationId": "distributions_python_pypi_read", "summary": "Inspect
        a python distribution", "description": "\nPulp Python Distributions are used
        to distribute\nPython Publications.  Pulp Python\nDistributions should not
        be confused with \"Python Distribution\" as defined by the Python\ncommunity.
        In Pulp usage, Python content is refered to as Python Package Content.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/python.PythonDistributionRead"}}}, "tags":
        ["distributions: pypi"]}, "put": {"operationId": "distributions_python_pypi_update",
        "summary": "Update a python distribution", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/python.PythonDistribution"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: pypi"]}, "patch": {"operationId": "distributions_python_pypi_partial_update",
        "summary": "Partially update a python distribution", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonDistribution"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["distributions: pypi"]}, "delete": {"operationId": "distributions_python_pypi_delete",
        "summary": "Delete a python distribution", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions:
        pypi"]}, "parameters": [{"name": "python_distribution_href", "in": "path",
        "description": "URI of Python Distribution. e.g.: /pulp/api/v3/distributions/python/pypi/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/exporters/core/pulp/":
        {"get": {"operationId": "exporters_core_pulp_list", "summary": "List pulp
        exporters", "description": "ViewSet for viewing PulpExporters.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/PulpExporterRead"}}}}}}, "tags": ["exporters: pulp"]}, "post":
        {"operationId": "exporters_core_pulp_create", "summary": "Create a pulp exporter",
        "description": "ViewSet for viewing PulpExporters.", "parameters": [{"name":
        "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PulpExporter"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PulpExporterRead"}}},
        "tags": ["exporters: pulp"]}, "parameters": []}, "{pulp_exporter_href}": {"get":
        {"operationId": "exporters_core_pulp_read", "summary": "Inspect a pulp exporter",
        "description": "ViewSet for viewing PulpExporters.", "parameters": [{"name":
        "fields", "in": "query", "description": "A list of fields to include in the
        response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/PulpExporterRead"}}}, "tags": ["exporters:
        pulp"]}, "put": {"operationId": "exporters_core_pulp_update", "summary": "Update
        a pulp exporter", "description": "ViewSet for viewing PulpExporters.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PulpExporter"}}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PulpExporterRead"}}},
        "tags": ["exporters: pulp"]}, "patch": {"operationId": "exporters_core_pulp_partial_update",
        "summary": "Partially update a pulp exporter", "description": "ViewSet for
        viewing PulpExporters.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/PulpExporter"}}], "responses": {"200":
        {"description": "", "schema": {"$ref": "#/definitions/PulpExporterRead"}}},
        "tags": ["exporters: pulp"]}, "delete": {"operationId": "exporters_core_pulp_delete",
        "summary": "Delete a pulp exporter", "description": "ViewSet for viewing PulpExporters.",
        "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["exporters:
        pulp"]}, "parameters": [{"name": "pulp_exporter_href", "in": "path", "description":
        "URI of Pulp Exporter. e.g.: /pulp/api/v3/exporters/core/pulp/1/", "required":
        true, "type": "string"}]}, "{pulp_exporter_href}exports/": {"get": {"operationId":
        "exporters_core_pulp_exports_list", "summary": "List pulp exports", "description":
        "ViewSet for viewing exports from a PulpExporter.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/PulpExportRead"}}}}}}, "tags": ["exporters: core exports"]},
        "post": {"operationId": "exporters_core_pulp_exports_create", "summary": "Create
        a pulp export", "description": "Trigger an asynchronous task to export a set
        of repositories", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/PulpExport"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["exporters: core exports"]}, "parameters": [{"name": "pulp_exporter_href",
        "in": "path", "description": "URI of Pulp Exporter. e.g.: /pulp/api/v3/exporters/core/pulp/1/",
        "required": true, "type": "string"}]}, "{pulp_export_href}": {"get": {"operationId":
        "exporters_core_pulp_exports_read", "summary": "Inspect a pulp export", "description":
        "ViewSet for viewing exports from a PulpExporter.", "parameters": [{"name":
        "fields", "in": "query", "description": "A list of fields to include in the
        response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/PulpExportRead"}}}, "tags": ["exporters:
        core exports"]}, "delete": {"operationId": "exporters_core_pulp_exports_delete",
        "summary": "Delete a pulp export", "description": "ViewSet for viewing exports
        from a PulpExporter.", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["exporters: core exports"]}, "parameters": [{"name": "pulp_export_href",
        "in": "path", "description": "URI of Pulp Export. e.g.: /pulp/api/v3/exporters/core/pulp/1/exports/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/exporters/file/filesystem/":
        {"get": {"operationId": "exporters_file_filesystem_list", "summary": "List
        file filesystem exporters", "description": "FilesystemExporters export content
        from a publication to a path on the file system.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "name", "in":
        "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/file.FileFilesystemExporterRead"}}}}}}, "tags": ["exporters:
        filesystem"]}, "post": {"operationId": "exporters_file_filesystem_create",
        "summary": "Create a file filesystem exporter", "description": "FilesystemExporters
        export content from a publication to a path on the file system.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFilesystemExporter"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileFilesystemExporterRead"}}},
        "tags": ["exporters: filesystem"]}, "parameters": []}, "{file_filesystem_exporter_href}":
        {"get": {"operationId": "exporters_file_filesystem_read", "summary": "Inspect
        a file filesystem exporter", "description": "FilesystemExporters export content
        from a publication to a path on the file system.", "parameters": [{"name":
        "fields", "in": "query", "description": "A list of fields to include in the
        response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/file.FileFilesystemExporterRead"}}},
        "tags": ["exporters: filesystem"]}, "put": {"operationId": "exporters_file_filesystem_update",
        "summary": "Update a file filesystem exporter", "description": "FilesystemExporters
        export content from a publication to a path on the file system.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFilesystemExporter"}}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFilesystemExporterRead"}}},
        "tags": ["exporters: filesystem"]}, "patch": {"operationId": "exporters_file_filesystem_partial_update",
        "summary": "Partially update a file filesystem exporter", "description": "FilesystemExporters
        export content from a publication to a path on the file system.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFilesystemExporter"}}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFilesystemExporterRead"}}},
        "tags": ["exporters: filesystem"]}, "delete": {"operationId": "exporters_file_filesystem_delete",
        "summary": "Delete a file filesystem exporter", "description": "FilesystemExporters
        export content from a publication to a path on the file system.", "parameters":
        [], "responses": {"204": {"description": ""}}, "tags": ["exporters: filesystem"]},
        "parameters": [{"name": "file_filesystem_exporter_href", "in": "path", "description":
        "URI of File Filesystem Exporter. e.g.: /pulp/api/v3/exporters/file/filesystem/1/",
        "required": true, "type": "string"}]}, "{file_filesystem_exporter_href}exports/":
        {"get": {"operationId": "exporters_file_filesystem_exports_list", "summary":
        "List exports", "description": "FilesystemExports provide a history of previous
        exports.", "parameters": [{"name": "ordering", "in": "query", "description":
        "Which field to use when ordering the results.", "required": false, "type":
        "string"}, {"name": "limit", "in": "query", "description": "Number of results
        to return per page.", "required": false, "type": "integer"}, {"name": "offset",
        "in": "query", "description": "The initial index from which to return the
        results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/ExportRead"}}}}}}, "tags": ["exporters:
        file exports"]}, "post": {"operationId": "exporters_file_filesystem_exports_create",
        "summary": "Create an export", "description": "Trigger an asynchronous task
        to export a file publication.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/PublicationExport"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["exporters: file exports"]}, "parameters": [{"name": "file_filesystem_exporter_href",
        "in": "path", "description": "URI of File Filesystem Exporter. e.g.: /pulp/api/v3/exporters/file/filesystem/1/",
        "required": true, "type": "string"}]}, "{export_href}": {"get": {"operationId":
        "exporters_file_filesystem_exports_read", "summary": "Inspect an export",
        "description": "FilesystemExports provide a history of previous exports.",
        "parameters": [{"name": "fields", "in": "query", "description": "A list of
        fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/ExportRead"}}},
        "tags": ["exporters: file exports"]}, "delete": {"operationId": "exporters_file_filesystem_exports_delete",
        "summary": "Delete an export", "description": "FilesystemExports provide a
        history of previous exports.", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["exporters: file exports"]}, "parameters": [{"name": "export_href",
        "in": "path", "description": "URI of Export. e.g.: /pulp/api/v3/exporters/file/filesystem/1/exports/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/importers/core/pulp/":
        {"get": {"operationId": "importers_core_pulp_list", "summary": "List pulp
        importers", "description": "ViewSet for PulpImporters.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "name", "in":
        "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/PulpImporterRead"}}}}}}, "tags": ["importers: pulp"]}, "post":
        {"operationId": "importers_core_pulp_create", "summary": "Create a pulp importer",
        "description": "ViewSet for PulpImporters.", "parameters": [{"name": "data",
        "in": "body", "required": true, "schema": {"$ref": "#/definitions/PulpImporter"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PulpImporterRead"}}},
        "tags": ["importers: pulp"]}, "parameters": []}, "{pulp_importer_href}": {"get":
        {"operationId": "importers_core_pulp_read", "summary": "Inspect a pulp importer",
        "description": "ViewSet for PulpImporters.", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/PulpImporterRead"}}}, "tags": ["importers: pulp"]},
        "put": {"operationId": "importers_core_pulp_update", "summary": "Update a
        pulp importer", "description": "ViewSet for PulpImporters.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PulpImporter"}}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PulpImporterRead"}}},
        "tags": ["importers: pulp"]}, "patch": {"operationId": "importers_core_pulp_partial_update",
        "summary": "Partially update a pulp importer", "description": "ViewSet for
        PulpImporters.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/PulpImporter"}}], "responses": {"200":
        {"description": "", "schema": {"$ref": "#/definitions/PulpImporterRead"}}},
        "tags": ["importers: pulp"]}, "delete": {"operationId": "importers_core_pulp_delete",
        "summary": "Delete a pulp importer", "description": "ViewSet for PulpImporters.",
        "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["importers:
        pulp"]}, "parameters": [{"name": "pulp_importer_href", "in": "path", "description":
        "URI of Pulp Importer. e.g.: /pulp/api/v3/importers/core/pulp/1/", "required":
        true, "type": "string"}]}, "{pulp_importer_href}imports/": {"get": {"operationId":
        "importers_core_pulp_imports_list", "summary": "List pulp imports", "description":
        "ViewSet for PulpImports.", "parameters": [{"name": "ordering", "in": "query",
        "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/ImportRead"}}}}}},
        "tags": ["importers: core imports"]}, "post": {"operationId": "importers_core_pulp_imports_create",
        "summary": "Create a pulp import", "description": "Trigger an asynchronous
        task to import a Pulp export.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/PulpImport"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["importers: core imports"]}, "parameters": [{"name": "pulp_importer_href",
        "in": "path", "description": "URI of Pulp Importer. e.g.: /pulp/api/v3/importers/core/pulp/1/",
        "required": true, "type": "string"}]}, "{pulp_import_href}": {"get": {"operationId":
        "importers_core_pulp_imports_read", "summary": "Inspect a pulp import", "description":
        "ViewSet for PulpImports.", "parameters": [{"name": "fields", "in": "query",
        "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ImportRead"}}},
        "tags": ["importers: core imports"]}, "delete": {"operationId": "importers_core_pulp_imports_delete",
        "summary": "Delete a pulp import", "description": "ViewSet for PulpImports.",
        "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["importers:
        core imports"]}, "parameters": [{"name": "pulp_import_href", "in": "path",
        "description": "URI of Pulp Import. e.g.: /pulp/api/v3/importers/core/pulp/1/imports/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/orphans/": {"delete":
        {"operationId": "orphans_delete", "summary": "Delete orphans", "description":
        "Trigger an asynchronous task that deletes allorphaned content and artifacts.",
        "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref":
        "#/definitions/AsyncOperationResponse"}}}, "tags": ["orphans"]}, "parameters":
        []}, "/pulp/api/v3/publications/file/file/": {"get": {"operationId": "publications_file_file_list",
        "summary": "List file publications", "description": "\nA FilePublication contains
        metadata about all the File Content in a particular File Repository Version.\nOnce
        a FilePublication has been created, it can be hosted using the\nFile Distribution
        API.", "parameters": [{"name": "ordering", "in": "query", "description": "Which
        field to use when ordering the results.", "required": false, "type": "string"},
        {"name": "repository_version", "in": "query", "description": "Repository Version
        referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created__lt",
        "in": "query", "description": "Filter results where pulp_created is less than
        value", "required": false, "type": "string"}, {"name": "pulp_created__lte",
        "in": "query", "description": "Filter results where pulp_created is less than
        or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt",
        "in": "query", "description": "Filter results where pulp_created is greater
        than value", "required": false, "type": "string"}, {"name": "pulp_created__gte",
        "in": "query", "description": "Filter results where pulp_created is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range",
        "in": "query", "description": "Filter results where pulp_created is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are
        supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/file.FilePublicationRead"}}}}}}, "tags": ["publications: file"]},
        "post": {"operationId": "publications_file_file_create", "summary": "Create
        a file publication", "description": "Trigger an asynchronous task to publish
        file content.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/file.FilePublication"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["publications: file"]}, "parameters": []}, "{file_publication_href}":
        {"get": {"operationId": "publications_file_file_read", "summary": "Inspect
        a file publication", "description": "\nA FilePublication contains metadata
        about all the File Content in a particular File Repository Version.\nOnce
        a FilePublication has been created, it can be hosted using the\nFile Distribution
        API.", "parameters": [{"name": "fields", "in": "query", "description": "A
        list of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FilePublicationRead"}}},
        "tags": ["publications: file"]}, "delete": {"operationId": "publications_file_file_delete",
        "summary": "Delete a file publication", "description": "\nA FilePublication
        contains metadata about all the File Content in a particular File Repository
        Version.\nOnce a FilePublication has been created, it can be hosted using
        the\nFile Distribution API.", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["publications: file"]}, "parameters": [{"name": "file_publication_href",
        "in": "path", "description": "URI of File Publication. e.g.: /pulp/api/v3/publications/file/file/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/publications/python/pypi/":
        {"get": {"operationId": "publications_python_pypi_list", "summary": "List
        python publications", "description": "\nPython Publications refer to the Python
        Package content in a repository version, and include\nmetadata about that
        content.", "parameters": [{"name": "ordering", "in": "query", "description":
        "Which field to use when ordering the results.", "required": false, "type":
        "string"}, {"name": "repository_version", "in": "query", "description": "Repository
        Version referenced by HREF", "required": false, "type": "string"}, {"name":
        "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created
        is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte",
        "in": "query", "description": "Filter results where pulp_created is less than
        or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt",
        "in": "query", "description": "Filter results where pulp_created is greater
        than value", "required": false, "type": "string"}, {"name": "pulp_created__gte",
        "in": "query", "description": "Filter results where pulp_created is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range",
        "in": "query", "description": "Filter results where pulp_created is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are
        supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/python.PythonPublicationRead"}}}}}}, "tags": ["publications:
        pypi"]}, "post": {"operationId": "publications_python_pypi_create", "summary":
        "Create a python publication", "description": "Trigger an asynchronous task
        to publish python content.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/python.PythonPublication"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["publications: pypi"]}, "parameters": []}, "{python_publication_href}":
        {"get": {"operationId": "publications_python_pypi_read", "summary": "Inspect
        a python publication", "description": "\nPython Publications refer to the
        Python Package content in a repository version, and include\nmetadata about
        that content.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonPublicationRead"}}},
        "tags": ["publications: pypi"]}, "delete": {"operationId": "publications_python_pypi_delete",
        "summary": "Delete a python publication", "description": "\nPython Publications
        refer to the Python Package content in a repository version, and include\nmetadata
        about that content.", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["publications: pypi"]}, "parameters": [{"name": "python_publication_href",
        "in": "path", "description": "URI of Python Publication. e.g.: /pulp/api/v3/publications/python/pypi/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/pulp_ansible/tags/":
        {"get": {"operationId": "pulp_ansible_tags_list", "summary": "List tags",
        "description": "ViewSet for Tag models.", "parameters": [{"name": "ordering",
        "in": "query", "description": "Which field to use when ordering the results.",
        "required": false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/TagRead"}}}}}},
        "tags": ["pulp_ansible: tags"]}, "parameters": []}, "/pulp/api/v3/remotes/ansible/ansible/":
        {"get": {"operationId": "remotes_ansible_ansible_list", "summary": "List ansible
        remotes", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "name", "in":
        "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated__lt", "in": "query", "description": "Filter results where
        pulp_last_updated is less than value", "required": false, "type": "string"},
        {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results
        where pulp_last_updated is less than or equal to value", "required": false,
        "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description":
        "Filter results where pulp_last_updated is greater than value", "required":
        false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query",
        "description": "Filter results where pulp_last_updated is greater than or
        equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range",
        "in": "query", "description": "Filter results where pulp_last_updated is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates
        are supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/ansible.AnsibleRemoteRead"}}}}}}, "tags": ["remotes: ansible"]},
        "post": {"operationId": "remotes_ansible_ansible_create", "summary": "Create
        an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRemoteRead"}}},
        "tags": ["remotes: ansible"]}, "parameters": []}, "{ansible_remote_href}":
        {"get": {"operationId": "remotes_ansible_ansible_read", "summary": "Inspect
        an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/ansible.AnsibleRemoteRead"}}}, "tags":
        ["remotes: ansible"]}, "put": {"operationId": "remotes_ansible_ansible_update",
        "summary": "Update an ansible remote", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: ansible"]}, "patch": {"operationId": "remotes_ansible_ansible_partial_update",
        "summary": "Partially update an ansible remote", "description": "Trigger an
        asynchronous partial update task", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: ansible"]}, "delete": {"operationId": "remotes_ansible_ansible_delete",
        "summary": "Delete an ansible remote", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]},
        "parameters": [{"name": "ansible_remote_href", "in": "path", "description":
        "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required":
        true, "type": "string"}]}, "/pulp/api/v3/remotes/ansible/collection/": {"get":
        {"operationId": "remotes_ansible_collection_list", "summary": "List collection
        remotes", "description": "ViewSet for Collection Remotes.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated__lt", "in": "query", "description": "Filter results where
        pulp_last_updated is less than value", "required": false, "type": "string"},
        {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results
        where pulp_last_updated is less than or equal to value", "required": false,
        "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description":
        "Filter results where pulp_last_updated is greater than value", "required":
        false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query",
        "description": "Filter results where pulp_last_updated is greater than or
        equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range",
        "in": "query", "description": "Filter results where pulp_last_updated is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates
        are supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/ansible.CollectionRemoteRead"}}}}}}, "tags": ["remotes: collection"]},
        "post": {"operationId": "remotes_ansible_collection_create", "summary": "Create
        a collection remote", "description": "ViewSet for Collection Remotes.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionRemoteRead"}}},
        "tags": ["remotes: collection"]}, "parameters": []}, "{collection_remote_href}":
        {"get": {"operationId": "remotes_ansible_collection_read", "summary": "Inspect
        a collection remote", "description": "ViewSet for Collection Remotes.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/ansible.CollectionRemoteRead"}}}, "tags":
        ["remotes: collection"]}, "put": {"operationId": "remotes_ansible_collection_update",
        "summary": "Update a collection remote", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: collection"]}, "patch": {"operationId": "remotes_ansible_collection_partial_update",
        "summary": "Partially update a collection remote", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: collection"]}, "delete": {"operationId": "remotes_ansible_collection_delete",
        "summary": "Delete a collection remote", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]},
        "parameters": [{"name": "collection_remote_href", "in": "path", "description":
        "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/container/container/":
        {"get": {"operationId": "remotes_container_container_list", "summary": "List
        container remotes", "description": "Container remotes represent an external
        repository that implements the Container\nRegistry API. Container remotes
        support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand``
        and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated__lt", "in": "query", "description": "Filter results where
        pulp_last_updated is less than value", "required": false, "type": "string"},
        {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results
        where pulp_last_updated is less than or equal to value", "required": false,
        "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description":
        "Filter results where pulp_last_updated is greater than value", "required":
        false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query",
        "description": "Filter results where pulp_last_updated is greater than or
        equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range",
        "in": "query", "description": "Filter results where pulp_last_updated is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates
        are supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/container.ContainerRemoteRead"}}}}}}, "tags": ["remotes: container"]},
        "post": {"operationId": "remotes_container_container_create", "summary": "Create
        a container remote", "description": "Container remotes represent an external
        repository that implements the Container\nRegistry API. Container remotes
        support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand``
        and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRemote"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRemoteRead"}}},
        "tags": ["remotes: container"]}, "parameters": []}, "{container_remote_href}":
        {"get": {"operationId": "remotes_container_container_read", "summary": "Inspect
        a container remote", "description": "Container remotes represent an external
        repository that implements the Container\nRegistry API. Container remotes
        support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand``
        and ``streamed`` policies can provide\nsignificant disk space savings.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/container.ContainerRemoteRead"}}}, "tags":
        ["remotes: container"]}, "put": {"operationId": "remotes_container_container_update",
        "summary": "Update a container remote", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/container.ContainerRemote"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: container"]}, "patch": {"operationId": "remotes_container_container_partial_update",
        "summary": "Partially update a container remote", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRemote"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: container"]}, "delete": {"operationId": "remotes_container_container_delete",
        "summary": "Delete a container remote", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: container"]},
        "parameters": [{"name": "container_remote_href", "in": "path", "description":
        "URI of Container Remote. e.g.: /pulp/api/v3/remotes/container/container/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/file/file/":
        {"get": {"operationId": "remotes_file_file_list", "summary": "List file remotes",
        "description": "\nFileRemote represents an external source of File\nContent.  The
        target url of a FileRemote must contain a file manifest, which contains the\nmetadata
        for all files at the source.", "parameters": [{"name": "ordering", "in": "query",
        "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "name", "in": "query", "description": "",
        "required": false, "type": "string"}, {"name": "name__in", "in": "query",
        "description": "Filter results where name is in a comma-separated list of
        values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt",
        "in": "query", "description": "Filter results where pulp_last_updated is less
        than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte",
        "in": "query", "description": "Filter results where pulp_last_updated is less
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt",
        "in": "query", "description": "Filter results where pulp_last_updated is greater
        than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte",
        "in": "query", "description": "Filter results where pulp_last_updated is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range",
        "in": "query", "description": "Filter results where pulp_last_updated is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates
        are supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/file.FileRemoteRead"}}}}}}, "tags": ["remotes: file"]}, "post":
        {"operationId": "remotes_file_file_create", "summary": "Create a file remote",
        "description": "\nFileRemote represents an external source of File\nContent.  The
        target url of a FileRemote must contain a file manifest, which contains the\nmetadata
        for all files at the source.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses":
        {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemoteRead"}}},
        "tags": ["remotes: file"]}, "parameters": []}, "{file_remote_href}": {"get":
        {"operationId": "remotes_file_file_read", "summary": "Inspect a file remote",
        "description": "\nFileRemote represents an external source of File\nContent.  The
        target url of a FileRemote must contain a file manifest, which contains the\nmetadata
        for all files at the source.", "parameters": [{"name": "fields", "in": "query",
        "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemoteRead"}}},
        "tags": ["remotes: file"]}, "put": {"operationId": "remotes_file_file_update",
        "summary": "Update a file remote", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: file"]}, "patch": {"operationId": "remotes_file_file_partial_update",
        "summary": "Partially update a file remote", "description": "Trigger an asynchronous
        partial update task", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: file"]}, "delete": {"operationId": "remotes_file_file_delete",
        "summary": "Delete a file remote", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]},
        "parameters": [{"name": "file_remote_href", "in": "path", "description": "URI
        of File Remote. e.g.: /pulp/api/v3/remotes/file/file/1/", "required": true,
        "type": "string"}]}, "/pulp/api/v3/remotes/python/python/": {"get": {"operationId":
        "remotes_python_python_list", "summary": "List python remotes", "description":
        "\nPython Remotes are representations of an external repository of Python
        content, eg.\nPyPI.  Fields include upstream repository config. Python Remotes
        are also used to `sync` from\nupstream repositories, and contains sync settings.",
        "parameters": [{"name": "ordering", "in": "query", "description": "Which field
        to use when ordering the results.", "required": false, "type": "string"},
        {"name": "name", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "name__in", "in": "query", "description": "Filter results
        where name is in a comma-separated list of values", "required": false, "type":
        "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description":
        "Filter results where pulp_last_updated is less than value", "required": false,
        "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description":
        "Filter results where pulp_last_updated is less than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query",
        "description": "Filter results where pulp_last_updated is greater than value",
        "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in":
        "query", "description": "Filter results where pulp_last_updated is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range",
        "in": "query", "description": "Filter results where pulp_last_updated is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates
        are supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/python.PythonRemoteRead"}}}}}}, "tags": ["remotes: python"]},
        "post": {"operationId": "remotes_python_python_create", "summary": "Create
        a python remote", "description": "\nPython Remotes are representations of
        an external repository of Python content, eg.\nPyPI.  Fields include upstream
        repository config. Python Remotes are also used to `sync` from\nupstream repositories,
        and contains sync settings.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/python.PythonRemote"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRemoteRead"}}},
        "tags": ["remotes: python"]}, "parameters": []}, "{python_remote_href}": {"get":
        {"operationId": "remotes_python_python_read", "summary": "Inspect a python
        remote", "description": "\nPython Remotes are representations of an external
        repository of Python content, eg.\nPyPI.  Fields include upstream repository
        config. Python Remotes are also used to `sync` from\nupstream repositories,
        and contains sync settings.", "parameters": [{"name": "fields", "in": "query",
        "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRemoteRead"}}},
        "tags": ["remotes: python"]}, "put": {"operationId": "remotes_python_python_update",
        "summary": "Update a python remote", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/python.PythonRemote"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: python"]}, "patch": {"operationId": "remotes_python_python_partial_update",
        "summary": "Partially update a python remote", "description": "Trigger an
        asynchronous partial update task", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/python.PythonRemote"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["remotes: python"]}, "delete": {"operationId": "remotes_python_python_delete",
        "summary": "Delete a python remote", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: python"]},
        "parameters": [{"name": "python_remote_href", "in": "path", "description":
        "URI of Python Remote. e.g.: /pulp/api/v3/remotes/python/python/1/", "required":
        true, "type": "string"}]}, "/pulp/api/v3/repositories/ansible/ansible/": {"get":
        {"operationId": "repositories_ansible_ansible_list", "summary": "List ansible
        repositorys", "description": "ViewSet for Ansible Remotes.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/ansible.AnsibleRepositoryRead"}}}}}}, "tags": ["repositories:
        ansible"]}, "post": {"operationId": "repositories_ansible_ansible_create",
        "summary": "Create an ansible repository", "description": "ViewSet for Ansible
        Remotes.", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}], "responses":
        {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRepositoryRead"}}},
        "tags": ["repositories: ansible"]}, "parameters": []}, "{ansible_repository_href}":
        {"get": {"operationId": "repositories_ansible_ansible_read", "summary": "Inspect
        an ansible repository", "description": "ViewSet for Ansible Remotes.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/ansible.AnsibleRepositoryRead"}}}, "tags":
        ["repositories: ansible"]}, "put": {"operationId": "repositories_ansible_ansible_update",
        "summary": "Update an ansible repository", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible"]}, "patch": {"operationId": "repositories_ansible_ansible_partial_update",
        "summary": "Partially update an ansible repository", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible"]}, "delete": {"operationId": "repositories_ansible_ansible_delete",
        "summary": "Delete an ansible repository", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories:
        ansible"]}, "parameters": [{"name": "ansible_repository_href", "in": "path",
        "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/",
        "required": true, "type": "string"}]}, "{ansible_repository_href}modify/":
        {"post": {"operationId": "repositories_ansible_ansible_modify", "summary":
        "Modify Repository Content", "description": "Trigger an asynchronous task
        to create a new repository version.", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible"]}, "parameters": [{"name": "ansible_repository_href",
        "in": "path", "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/",
        "required": true, "type": "string"}]}, "{ansible_repository_href}sync/": {"post":
        {"operationId": "repositories_ansible_ansible_sync", "description": "Trigger
        an asynchronous task to sync Ansible content.", "parameters": [{"name": "data",
        "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible"]}, "parameters": [{"name": "ansible_repository_href",
        "in": "path", "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/",
        "required": true, "type": "string"}]}, "{ansible_repository_href}versions/":
        {"get": {"operationId": "repositories_ansible_ansible_versions_list", "summary":
        "List repository versions", "description": "RpmRepositoryVersion represents
        a single file repository version.", "parameters": [{"name": "ordering", "in":
        "query", "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "number", "in": "query", "description":
        "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query",
        "description": "Filter results where number is less than value", "required":
        false, "type": "number"}, {"name": "number__lte", "in": "query", "description":
        "Filter results where number is less than or equal to value", "required":
        false, "type": "number"}, {"name": "number__gt", "in": "query", "description":
        "Filter results where number is greater than value", "required": false, "type":
        "number"}, {"name": "number__gte", "in": "query", "description": "Filter results
        where number is greater than or equal to value", "required": false, "type":
        "number"}, {"name": "number__range", "in": "query", "description": "Filter
        results where number is between two comma separated values", "required": false,
        "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description":
        "Filter results where pulp_created is less than value", "required": false,
        "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description":
        "Filter results where pulp_created is less than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description":
        "Filter results where pulp_created is greater than value", "required": false,
        "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description":
        "Filter results where pulp_created is greater than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description":
        "Filter results where pulp_created is between two comma separated values",
        "required": false, "type": "string"}, {"name": "content", "in": "query", "description":
        "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name":
        "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are
        supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/RepositoryVersionRead"}}}}}}, "tags": ["repositories: ansible
        versions"]}, "parameters": [{"name": "ansible_repository_href", "in": "path",
        "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/",
        "required": true, "type": "string"}]}, "{ansible_repository_version_href}":
        {"get": {"operationId": "repositories_ansible_ansible_versions_read", "summary":
        "Inspect a repository version", "description": "RpmRepositoryVersion represents
        a single file repository version.", "parameters": [{"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersionRead"}}},
        "tags": ["repositories: ansible versions"]}, "delete": {"operationId": "repositories_ansible_ansible_versions_delete",
        "summary": "Delete a repository version", "description": "Trigger an asynchronous
        task to delete a repositroy version.", "parameters": [], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible versions"]}, "parameters": [{"name": "ansible_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/versions/1/",
        "required": true, "type": "string"}]}, "{ansible_repository_version_href}repair/":
        {"post": {"operationId": "repositories_ansible_ansible_versions_repair", "description":
        "Trigger an asynchronous task to repair a repositroy version.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryVersion"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: ansible versions"]}, "parameters": [{"name": "ansible_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/versions/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/container/container/":
        {"get": {"operationId": "repositories_container_container_list", "summary":
        "List container repositorys", "description": "ViewSet for container repo.",
        "parameters": [{"name": "ordering", "in": "query", "description": "Which field
        to use when ordering the results.", "required": false, "type": "string"},
        {"name": "name", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "name__in", "in": "query", "description": "Filter results
        where name is in a comma-separated list of values", "required": false, "type":
        "string"}, {"name": "limit", "in": "query", "description": "Number of results
        to return per page.", "required": false, "type": "integer"}, {"name": "offset",
        "in": "query", "description": "The initial index from which to return the
        results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/container.ContainerRepositoryRead"}}}}}},
        "tags": ["repositories: container"]}, "post": {"operationId": "repositories_container_container_create",
        "summary": "Create a container repository", "description": "ViewSet for container
        repo.", "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/container.ContainerRepository"}}], "responses": {"201":
        {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRepositoryRead"}}},
        "tags": ["repositories: container"]}, "parameters": []}, "{container_repository_href}":
        {"get": {"operationId": "repositories_container_container_read", "summary":
        "Inspect a container repository", "description": "ViewSet for container repo.",
        "parameters": [{"name": "fields", "in": "query", "description": "A list of
        fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/container.ContainerRepositoryRead"}}},
        "tags": ["repositories: container"]}, "put": {"operationId": "repositories_container_container_update",
        "summary": "Update a container repository", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/container.ContainerRepository"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "patch": {"operationId": "repositories_container_container_partial_update",
        "summary": "Partially update a container repository", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/container.ContainerRepository"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "delete": {"operationId": "repositories_container_container_delete",
        "summary": "Delete a container repository", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories:
        container"]}, "parameters": [{"name": "container_repository_href", "in": "path",
        "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}add/":
        {"post": {"operationId": "repositories_container_container_add", "summary":
        "Add content", "description": "Trigger an asynchronous task to recursively
        add container content.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}build_image/":
        {"post": {"operationId": "repositories_container_container_build_image", "summary":
        "Build an Image", "description": "Trigger an asynchronous task to build an
        OCI image from a Containerfile. A new repository version is created with the
        new image and tag. This API is tech preview in Pulp Container 1.1. Backwards
        compatibility when upgrading is not guaranteed.", "parameters": [{"name":
        "containerfile_artifact", "in": "formData", "description": "Artifact representing
        the Containerfile that should be used to run buildah.", "required": false,
        "type": "string", "format": "uri"}, {"name": "containerfile", "in": "formData",
        "description": "An uploaded Containerfile that should be used to run buildah.",
        "required": false, "type": "file"}, {"name": "tag", "in": "formData", "description":
        "A tag name for the new image being built.", "required": false, "type": "string",
        "default": "latest", "minLength": 1}, {"name": "artifacts", "in": "formData",
        "description": "A JSON string where each key is an artifact href and the value
        is it''s relative path (name) inside the /pulp_working_directory of the build
        container executing the Containerfile.", "required": false, "type": "string"}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"],
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}copy_manifests/":
        {"post": {"operationId": "repositories_container_container_copy_manifests",
        "summary": "Copy manifests", "description": "Trigger an asynchronous task
        to copy manifests", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/ManifestCopy"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}copy_tags/":
        {"post": {"operationId": "repositories_container_container_copy_tags", "summary":
        "Copy tags", "description": "Trigger an asynchronous task to copy tags", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagCopy"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}remove/":
        {"post": {"operationId": "repositories_container_container_remove", "summary":
        "Remove content", "description": "Trigger an async task to recursively remove
        container content.", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/RecursiveManage"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}sync/":
        {"post": {"operationId": "repositories_container_container_sync", "summary":
        "Sync from a remote", "description": "Trigger an asynchronous task to sync
        content.", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}tag/":
        {"post": {"operationId": "repositories_container_container_tag", "summary":
        "Create a Tag", "description": "Trigger an asynchronous task to tag an image
        in the repository", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/TagImage"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}untag/":
        {"post": {"operationId": "repositories_container_container_untag", "summary":
        "Delete a tag", "description": "Trigger an asynchronous task to untag an image
        in the repository", "parameters": [{"name": "data", "in": "body", "required":
        true, "schema": {"$ref": "#/definitions/UnTagImage"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_href}versions/":
        {"get": {"operationId": "repositories_container_container_versions_list",
        "summary": "List repository versions", "description": "ContainerRepositoryVersion
        represents a single container repository version.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "number", "in":
        "query", "description": "", "required": false, "type": "number"}, {"name":
        "number__lt", "in": "query", "description": "Filter results where number is
        less than value", "required": false, "type": "number"}, {"name": "number__lte",
        "in": "query", "description": "Filter results where number is less than or
        equal to value", "required": false, "type": "number"}, {"name": "number__gt",
        "in": "query", "description": "Filter results where number is greater than
        value", "required": false, "type": "number"}, {"name": "number__gte", "in":
        "query", "description": "Filter results where number is greater than or equal
        to value", "required": false, "type": "number"}, {"name": "number__range",
        "in": "query", "description": "Filter results where number is between two
        comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt",
        "in": "query", "description": "Filter results where pulp_created is less than
        value", "required": false, "type": "string"}, {"name": "pulp_created__lte",
        "in": "query", "description": "Filter results where pulp_created is less than
        or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt",
        "in": "query", "description": "Filter results where pulp_created is greater
        than value", "required": false, "type": "string"}, {"name": "pulp_created__gte",
        "in": "query", "description": "Filter results where pulp_created is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range",
        "in": "query", "description": "Filter results where pulp_created is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "content", "in": "query", "description": "Content Unit referenced by HREF",
        "required": false, "type": "string"}, {"name": "pulp_created", "in": "query",
        "description": "ISO 8601 formatted dates are supported", "required": false,
        "type": "string"}, {"name": "limit", "in": "query", "description": "Number
        of results to return per page.", "required": false, "type": "integer"}, {"name":
        "offset", "in": "query", "description": "The initial index from which to return
        the results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/RepositoryVersionRead"}}}}}}, "tags":
        ["repositories: container versions"]}, "parameters": [{"name": "container_repository_href",
        "in": "path", "description": "URI of Container Repository. e.g.: /pulp/api/v3/repositories/container/container/1/",
        "required": true, "type": "string"}]}, "{container_repository_version_href}":
        {"get": {"operationId": "repositories_container_container_versions_read",
        "summary": "Inspect a repository version", "description": "ContainerRepositoryVersion
        represents a single container repository version.", "parameters": [{"name":
        "fields", "in": "query", "description": "A list of fields to include in the
        response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/RepositoryVersionRead"}}}, "tags": ["repositories:
        container versions"]}, "delete": {"operationId": "repositories_container_container_versions_delete",
        "summary": "Delete a repository version", "description": "Trigger an asynchronous
        task to delete a repositroy version.", "parameters": [], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: container versions"]}, "parameters": [{"name": "container_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/container/container/1/versions/1/",
        "required": true, "type": "string"}]}, "{container_repository_version_href}repair/":
        {"post": {"operationId": "repositories_container_container_versions_repair",
        "description": "Trigger an asynchronous task to repair a repositroy version.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/RepositoryVersion"}}], "responses": {"202": {"description":
        "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags":
        ["repositories: container versions"]}, "parameters": [{"name": "container_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/container/container/1/versions/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/file/file/":
        {"get": {"operationId": "repositories_file_file_list", "summary": "List file
        repositorys", "description": "\nFileRepository represents a single file repository,
        to which content can be synced, added,\nor removed.", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "name", "in":
        "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/file.FileRepositoryRead"}}}}}}, "tags": ["repositories: file"]},
        "post": {"operationId": "repositories_file_file_create", "summary": "Create
        a file repository", "description": "\nFileRepository represents a single file
        repository, to which content can be synced, added,\nor removed.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepositoryRead"}}},
        "tags": ["repositories: file"]}, "parameters": []}, "{file_repository_href}":
        {"get": {"operationId": "repositories_file_file_read", "summary": "Inspect
        a file repository", "description": "\nFileRepository represents a single file
        repository, to which content can be synced, added,\nor removed.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/file.FileRepositoryRead"}}}, "tags":
        ["repositories: file"]}, "put": {"operationId": "repositories_file_file_update",
        "summary": "Update a file repository", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file"]}, "patch": {"operationId": "repositories_file_file_partial_update",
        "summary": "Partially update a file repository", "description": "Trigger an
        asynchronous partial update task", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file"]}, "delete": {"operationId": "repositories_file_file_delete",
        "summary": "Delete a file repository", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories:
        file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description":
        "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required":
        true, "type": "string"}]}, "{file_repository_href}modify/": {"post": {"operationId":
        "repositories_file_file_modify", "summary": "Modify Repository Content", "description":
        "Trigger an asynchronous task to create a new repository version.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href",
        "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/",
        "required": true, "type": "string"}]}, "{file_repository_href}sync/": {"post":
        {"operationId": "repositories_file_file_sync", "description": "Trigger an
        asynchronous task to sync file content.", "parameters": [{"name": "data",
        "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href",
        "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/",
        "required": true, "type": "string"}]}, "{file_repository_href}versions/":
        {"get": {"operationId": "repositories_file_file_versions_list", "summary":
        "List repository versions", "description": "\nFileRepositoryVersion represents
        a single file repository version.", "parameters": [{"name": "ordering", "in":
        "query", "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "number", "in": "query", "description":
        "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query",
        "description": "Filter results where number is less than value", "required":
        false, "type": "number"}, {"name": "number__lte", "in": "query", "description":
        "Filter results where number is less than or equal to value", "required":
        false, "type": "number"}, {"name": "number__gt", "in": "query", "description":
        "Filter results where number is greater than value", "required": false, "type":
        "number"}, {"name": "number__gte", "in": "query", "description": "Filter results
        where number is greater than or equal to value", "required": false, "type":
        "number"}, {"name": "number__range", "in": "query", "description": "Filter
        results where number is between two comma separated values", "required": false,
        "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description":
        "Filter results where pulp_created is less than value", "required": false,
        "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description":
        "Filter results where pulp_created is less than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description":
        "Filter results where pulp_created is greater than value", "required": false,
        "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description":
        "Filter results where pulp_created is greater than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description":
        "Filter results where pulp_created is between two comma separated values",
        "required": false, "type": "string"}, {"name": "content", "in": "query", "description":
        "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name":
        "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are
        supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/RepositoryVersionRead"}}}}}}, "tags": ["repositories: file
        versions"]}, "parameters": [{"name": "file_repository_href", "in": "path",
        "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/",
        "required": true, "type": "string"}]}, "{file_repository_version_href}": {"get":
        {"operationId": "repositories_file_file_versions_read", "summary": "Inspect
        a repository version", "description": "\nFileRepositoryVersion represents
        a single file repository version.", "parameters": [{"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersionRead"}}},
        "tags": ["repositories: file versions"]}, "delete": {"operationId": "repositories_file_file_versions_delete",
        "summary": "Delete a repository version", "description": "Trigger an asynchronous
        task to delete a repositroy version.", "parameters": [], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/file/file/1/versions/1/",
        "required": true, "type": "string"}]}, "{file_repository_version_href}repair/":
        {"post": {"operationId": "repositories_file_file_versions_repair", "description":
        "Trigger an asynchronous task to repair a repositroy version.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryVersion"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/file/file/1/versions/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/python/python/":
        {"get": {"operationId": "repositories_python_python_list", "summary": "List
        python repositorys", "description": "A ViewSet for PythonRepository.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "name",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "name__in", "in": "query", "description": "Filter results where name is in
        a comma-separated list of values", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/python.PythonRepositoryRead"}}}}}}, "tags": ["repositories:
        python"]}, "post": {"operationId": "repositories_python_python_create", "summary":
        "Create a python repository", "description": "A ViewSet for PythonRepository.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/python.PythonRepository"}}], "responses": {"201":
        {"description": "", "schema": {"$ref": "#/definitions/python.PythonRepositoryRead"}}},
        "tags": ["repositories: python"]}, "parameters": []}, "{python_repository_href}":
        {"get": {"operationId": "repositories_python_python_read", "summary": "Inspect
        a python repository", "description": "A ViewSet for PythonRepository.", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/python.PythonRepositoryRead"}}}, "tags":
        ["repositories: python"]}, "put": {"operationId": "repositories_python_python_update",
        "summary": "Update a python repository", "description": "Trigger an asynchronous
        update task", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/python.PythonRepository"}}], "responses":
        {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python"]}, "patch": {"operationId": "repositories_python_python_partial_update",
        "summary": "Partially update a python repository", "description": "Trigger
        an asynchronous partial update task", "parameters": [{"name": "data", "in":
        "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRepository"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python"]}, "delete": {"operationId": "repositories_python_python_delete",
        "summary": "Delete a python repository", "description": "Trigger an asynchronous
        delete task", "parameters": [], "responses": {"202": {"description": "", "schema":
        {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories:
        python"]}, "parameters": [{"name": "python_repository_href", "in": "path",
        "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/",
        "required": true, "type": "string"}]}, "{python_repository_href}modify/":
        {"post": {"operationId": "repositories_python_python_modify", "summary": "Modify
        Repository Content", "description": "Trigger an asynchronous task to create
        a new repository version.", "parameters": [{"name": "data", "in": "body",
        "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python"]}, "parameters": [{"name": "python_repository_href",
        "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/",
        "required": true, "type": "string"}]}, "{python_repository_href}sync/": {"post":
        {"operationId": "repositories_python_python_sync", "summary": "Sync from remote",
        "description": "Trigger an asynchronous task to sync Python content.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python"]}, "parameters": [{"name": "python_repository_href",
        "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/",
        "required": true, "type": "string"}]}, "{python_repository_href}versions/":
        {"get": {"operationId": "repositories_python_python_versions_list", "summary":
        "List repository versions", "description": "PythonRepositoryVersion represents
        a single Python repository version.", "parameters": [{"name": "ordering",
        "in": "query", "description": "Which field to use when ordering the results.",
        "required": false, "type": "string"}, {"name": "number", "in": "query", "description":
        "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query",
        "description": "Filter results where number is less than value", "required":
        false, "type": "number"}, {"name": "number__lte", "in": "query", "description":
        "Filter results where number is less than or equal to value", "required":
        false, "type": "number"}, {"name": "number__gt", "in": "query", "description":
        "Filter results where number is greater than value", "required": false, "type":
        "number"}, {"name": "number__gte", "in": "query", "description": "Filter results
        where number is greater than or equal to value", "required": false, "type":
        "number"}, {"name": "number__range", "in": "query", "description": "Filter
        results where number is between two comma separated values", "required": false,
        "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description":
        "Filter results where pulp_created is less than value", "required": false,
        "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description":
        "Filter results where pulp_created is less than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description":
        "Filter results where pulp_created is greater than value", "required": false,
        "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description":
        "Filter results where pulp_created is greater than or equal to value", "required":
        false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description":
        "Filter results where pulp_created is between two comma separated values",
        "required": false, "type": "string"}, {"name": "content", "in": "query", "description":
        "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name":
        "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are
        supported", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/RepositoryVersionRead"}}}}}}, "tags": ["repositories: python
        versions"]}, "parameters": [{"name": "python_repository_href", "in": "path",
        "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/",
        "required": true, "type": "string"}]}, "{python_repository_version_href}":
        {"get": {"operationId": "repositories_python_python_versions_read", "summary":
        "Inspect a repository version", "description": "PythonRepositoryVersion represents
        a single Python repository version.", "parameters": [{"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersionRead"}}},
        "tags": ["repositories: python versions"]}, "delete": {"operationId": "repositories_python_python_versions_delete",
        "summary": "Delete a repository version", "description": "Trigger an asynchronous
        task to delete a repositroy version.", "parameters": [], "responses": {"202":
        {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python versions"]}, "parameters": [{"name": "python_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/python/python/1/versions/1/",
        "required": true, "type": "string"}]}, "{python_repository_version_href}repair/":
        {"post": {"operationId": "repositories_python_python_versions_repair", "description":
        "Trigger an asynchronous task to repair a repositroy version.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryVersion"}}],
        "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}},
        "tags": ["repositories: python versions"]}, "parameters": [{"name": "python_repository_version_href",
        "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/python/python/1/versions/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/signing-services/": {"get":
        {"operationId": "signing-services_list", "summary": "List signing services",
        "description": "A ViewSet that supports browsing of existing signing services.",
        "parameters": [{"name": "ordering", "in": "query", "description": "Which field
        to use when ordering the results.", "required": false, "type": "string"},
        {"name": "name", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "limit", "in": "query", "description": "Number of results
        to return per page.", "required": false, "type": "integer"}, {"name": "offset",
        "in": "query", "description": "The initial index from which to return the
        results.", "required": false, "type": "integer"}, {"name": "fields", "in":
        "query", "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"required":
        ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/SigningServiceRead"}}}}}}, "tags":
        ["signing-services"]}, "parameters": []}, "{signing_service_href}": {"get":
        {"operationId": "signing-services_read", "summary": "Inspect a signing service",
        "description": "A ViewSet that supports browsing of existing signing services.",
        "parameters": [{"name": "fields", "in": "query", "description": "A list of
        fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/SigningServiceRead"}}},
        "tags": ["signing-services"]}, "parameters": [{"name": "signing_service_href",
        "in": "path", "description": "URI of Signing Service. e.g.: /pulp/api/v3/signing-services/1/",
        "required": true, "type": "string"}]}, "/pulp/api/v3/status/": {"get": {"operationId":
        "status_read", "summary": "Inspect status of Pulp", "description": "Returns
        app information including the version of pulpcore and loaded pulp plugins,\nknown
        workers, database connection status, and messaging connection status", "parameters":
        [{"name": "fields", "in": "query", "description": "A list of fields to include
        in the response.", "required": false, "type": "string"}, {"name": "exclude_fields",
        "in": "query", "description": "A list of fields to exclude from the response.",
        "required": false, "type": "string"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["status"]}, "parameters":
        []}, "/pulp/api/v3/task-groups/": {"get": {"operationId": "task-groups_list",
        "summary": "List task groups", "description": "", "parameters": [{"name":
        "ordering", "in": "query", "description": "Which field to use when ordering
        the results.", "required": false, "type": "string"}, {"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/TaskGroupRead"}}}}}}, "tags": ["task-groups"]}, "parameters":
        []}, "{task_group_href}": {"get": {"operationId": "task-groups_read", "summary":
        "Inspect a task group", "description": "", "parameters": [{"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"$ref": "#/definitions/TaskGroupRead"}}}, "tags": ["task-groups"]}, "parameters":
        [{"name": "task_group_href", "in": "path", "description": "URI of Task Group.
        e.g.: /pulp/api/v3/task-groups/1/", "required": true, "type": "string"}]},
        "/pulp/api/v3/tasks/": {"get": {"operationId": "tasks_list", "summary": "List
        tasks", "description": "", "parameters": [{"name": "ordering", "in": "query",
        "description": "Which field to use when ordering the results.", "required":
        false, "type": "string"}, {"name": "name__contains", "in": "query", "description":
        "Filter results where name contains value", "required": false, "type": "string"},
        {"name": "state", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "state__in", "in": "query", "description": "Filter results
        where state is in a comma-separated list of values", "required": false, "type":
        "string"}, {"name": "worker", "in": "query", "description": "Foreign Key referenced
        by HREF", "required": false, "type": "string"}, {"name": "worker__in", "in":
        "query", "description": "Filter results where worker is in a comma-separated
        list of values", "required": false, "type": "string"}, {"name": "started_at__lt",
        "in": "query", "description": "Filter results where started_at is less than
        value", "required": false, "type": "string"}, {"name": "started_at__lte",
        "in": "query", "description": "Filter results where started_at is less than
        or equal to value", "required": false, "type": "string"}, {"name": "started_at__gt",
        "in": "query", "description": "Filter results where started_at is greater
        than value", "required": false, "type": "string"}, {"name": "started_at__gte",
        "in": "query", "description": "Filter results where started_at is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "started_at__range",
        "in": "query", "description": "Filter results where started_at is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "finished_at__lt", "in": "query", "description": "Filter results where finished_at
        is less than value", "required": false, "type": "string"}, {"name": "finished_at__lte",
        "in": "query", "description": "Filter results where finished_at is less than
        or equal to value", "required": false, "type": "string"}, {"name": "finished_at__gt",
        "in": "query", "description": "Filter results where finished_at is greater
        than value", "required": false, "type": "string"}, {"name": "finished_at__gte",
        "in": "query", "description": "Filter results where finished_at is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "finished_at__range",
        "in": "query", "description": "Filter results where finished_at is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "parent_task", "in": "query", "description": "Foreign Key referenced by HREF",
        "required": false, "type": "string"}, {"name": "child_tasks", "in": "query",
        "description": "Foreign Key referenced by HREF", "required": false, "type":
        "string"}, {"name": "task_group", "in": "query", "description": "Foreign Key
        referenced by HREF", "required": false, "type": "string"}, {"name": "reserved_resources_record",
        "in": "query", "description": "", "required": false, "type": "string"}, {"name":
        "created_resources", "in": "query", "description": "", "required": false,
        "type": "string"}, {"name": "name", "in": "query", "description": "", "required":
        false, "type": "string"}, {"name": "started_at", "in": "query", "description":
        "ISO 8601 formatted dates are supported", "required": false, "type": "string"},
        {"name": "finished_at", "in": "query", "description": "ISO 8601 formatted
        dates are supported", "required": false, "type": "string"}, {"name": "limit",
        "in": "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/TaskRead"}}}}}}, "tags": ["tasks"]}, "parameters": []}, "{task_href}":
        {"get": {"operationId": "tasks_read", "summary": "Inspect a task", "description":
        "", "parameters": [{"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskRead"}}},
        "tags": ["tasks"]}, "patch": {"operationId": "tasks_cancel", "summary": "Cancel
        a task", "description": "This operation cancels a task.", "parameters": [{"name":
        "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskCancel"}}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}},
        "409": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags":
        ["tasks"]}, "delete": {"operationId": "tasks_delete", "summary": "Delete a
        task", "description": "", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["tasks"]}, "parameters": [{"name": "task_href", "in": "path",
        "description": "URI of Task. e.g.: /pulp/api/v3/tasks/1/", "required": true,
        "type": "string"}]}, "/pulp/api/v3/uploads/": {"get": {"operationId": "uploads_list",
        "summary": "List uploads", "description": "View for chunked uploads.", "parameters":
        [{"name": "ordering", "in": "query", "description": "Which field to use when
        ordering the results.", "required": false, "type": "string"}, {"name": "completed",
        "in": "query", "description": "ISO 8601 formatted dates are supported", "required":
        false, "type": "string"}, {"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/UploadRead"}}}}}},
        "tags": ["uploads"]}, "post": {"operationId": "uploads_create", "summary":
        "Create an upload", "description": "View for chunked uploads.", "parameters":
        [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Upload"}}],
        "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UploadRead"}}},
        "tags": ["uploads"]}, "parameters": []}, "{upload_href}": {"get": {"operationId":
        "uploads_read", "summary": "Inspect an upload", "description": "View for chunked
        uploads.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UploadDetailRead"}}},
        "tags": ["uploads"]}, "put": {"operationId": "uploads_update", "summary":
        "Upload a file chunk", "description": "Upload a chunk for an upload.", "parameters":
        [{"name": "file", "in": "formData", "description": "A chunk of the uploaded
        file.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData",
        "description": "The SHA-256 checksum of the chunk if available.", "required":
        false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "Content-Range",
        "in": "header", "description": "The Content-Range header specifies the location
        of the file chunk within the file.", "required": true, "type": "string", "pattern":
        "^bytes (\\d+)-(\\d+)/(\\d+|[*])$"}], "responses": {"200": {"description":
        "", "schema": {"$ref": "#/definitions/Upload"}}}, "consumes": ["multipart/form-data",
        "application/x-www-form-urlencoded"], "tags": ["uploads"]}, "delete": {"operationId":
        "uploads_delete", "summary": "Delete an upload", "description": "View for
        chunked uploads.", "parameters": [], "responses": {"204": {"description":
        ""}}, "tags": ["uploads"]}, "parameters": [{"name": "upload_href", "in": "path",
        "description": "URI of Upload. e.g.: /pulp/api/v3/uploads/1/", "required":
        true, "type": "string"}]}, "{upload_href}commit/": {"post": {"operationId":
        "uploads_commit", "summary": "Finish an Upload", "description": "Queues a
        Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.",
        "parameters": [{"name": "data", "in": "body", "required": true, "schema":
        {"$ref": "#/definitions/UploadCommit"}}], "responses": {"202": {"description":
        "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags":
        ["uploads"]}, "parameters": [{"name": "upload_href", "in": "path", "description":
        "URI of Upload. e.g.: /pulp/api/v3/uploads/1/", "required": true, "type":
        "string"}]}, "/pulp/api/v3/workers/": {"get": {"operationId": "workers_list",
        "summary": "List workers", "description": "", "parameters": [{"name": "ordering",
        "in": "query", "description": "Which field to use when ordering the results.",
        "required": false, "type": "string"}, {"name": "name", "in": "query", "description":
        "", "required": false, "type": "string"}, {"name": "name__in", "in": "query",
        "description": "Filter results where name is in a comma-separated list of
        values", "required": false, "type": "string"}, {"name": "last_heartbeat__lt",
        "in": "query", "description": "Filter results where last_heartbeat is less
        than value", "required": false, "type": "string"}, {"name": "last_heartbeat__lte",
        "in": "query", "description": "Filter results where last_heartbeat is less
        than or equal to value", "required": false, "type": "string"}, {"name": "last_heartbeat__gt",
        "in": "query", "description": "Filter results where last_heartbeat is greater
        than value", "required": false, "type": "string"}, {"name": "last_heartbeat__gte",
        "in": "query", "description": "Filter results where last_heartbeat is greater
        than or equal to value", "required": false, "type": "string"}, {"name": "last_heartbeat__range",
        "in": "query", "description": "Filter results where last_heartbeat is between
        two comma separated values", "required": false, "type": "string"}, {"name":
        "online", "in": "query", "description": "", "required": false, "type": "string"},
        {"name": "missing", "in": "query", "description": "", "required": false, "type":
        "string"}, {"name": "last_heartbeat", "in": "query", "description": "ISO 8601
        formatted dates are supported", "required": false, "type": "string"}, {"name":
        "limit", "in": "query", "description": "Number of results to return per page.",
        "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/WorkerRead"}}}}}}, "tags": ["workers"]}, "parameters": []},
        "{worker_href}": {"get": {"operationId": "workers_read", "summary": "Inspect
        a worker", "description": "", "parameters": [{"name": "fields", "in": "query",
        "description": "A list of fields to include in the response.", "required":
        false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description":
        "A list of fields to exclude from the response.", "required": false, "type":
        "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WorkerRead"}}},
        "tags": ["workers"]}, "parameters": [{"name": "worker_href", "in": "path",
        "description": "URI of Worker. e.g.: /pulp/api/v3/workers/1/", "required":
        true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/": {"get": {"operationId":
        "pulp_ansible_galaxy_api_list", "description": "Return a response to the \"GET\"
        action.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": ""}}, "tags": ["pulp_ansible: api"]},
        "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]},
        "/pulp_ansible/galaxy/{path}/api/v1/roles/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_list",
        "description": "APIView for Roles.", "parameters": [{"name": "limit", "in":
        "query", "description": "Number of results to return per page.", "required":
        false, "type": "integer"}, {"name": "offset", "in": "query", "description":
        "The initial index from which to return the results.", "required": false,
        "type": "integer"}, {"name": "fields", "in": "query", "description": "A list
        of fields to include in the response.", "required": false, "type": "string"},
        {"name": "exclude_fields", "in": "query", "description": "A list of fields
        to exclude from the response.", "required": false, "type": "string"}], "responses":
        {"200": {"description": "", "schema": {"required": ["count", "results"], "type":
        "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string",
        "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format":
        "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref":
        "#/definitions/GalaxyRoleRead"}}}}}}, "tags": ["pulp_ansible: galaxy api roles"]},
        "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]},
        "/pulp_ansible/galaxy/{path}/api/v1/roles/{role_pk}/versions/": {"get": {"operationId":
        "pulp_ansible_galaxy_api_v1_roles_versions_list", "description": "APIView
        for Role Versions.", "parameters": [{"name": "limit", "in": "query", "description":
        "Number of results to return per page.", "required": false, "type": "integer"},
        {"name": "offset", "in": "query", "description": "The initial index from which
        to return the results.", "required": false, "type": "integer"}, {"name": "fields",
        "in": "query", "description": "A list of fields to include in the response.",
        "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query",
        "description": "A list of fields to exclude from the response.", "required":
        false, "type": "string"}], "responses": {"200": {"description": "", "schema":
        {"required": ["count", "results"], "type": "object", "properties": {"count":
        {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable":
        true}, "previous": {"type": "string", "format": "uri", "x-nullable": true},
        "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRoleVersionRead"}}}}}},
        "tags": ["pulp_ansible: galaxy api v1 versions"]}, "parameters": [{"name":
        "path", "in": "path", "required": true, "type": "string"}, {"name": "role_pk",
        "in": "path", "required": true, "type": "string"}]}, "{collection_import_href}":
        {"get": {"operationId": "pulp_ansible_galaxy_api_v3_imports_collections_read",
        "summary": "Inspect a collection import", "description": "Returns a CollectionImport
        object.", "parameters": [{"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"},
        {"name": "since", "in": "query", "description": "Filter messages since a given
        timestamp", "type": "string", "format": "date-time"}], "responses": {"200":
        {"description": "", "schema": {"$ref": "#/definitions/CollectionImportDetailRead"}}},
        "tags": ["pulp_ansible: galaxy api v3 collections"]}, "parameters": [{"name":
        "collection_import_href", "in": "path", "description": "URI of Collection
        Import. e.g.: /pulp_ansible/galaxy/1/api/v3/imports/collections/1/", "required":
        true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v2/collections/":
        {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_list", "description":
        "View for Collection models.", "parameters": [{"name": "page", "in": "query",
        "description": "A page number within the paginated result set.", "required":
        false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/GalaxyCollectionRead"}}}}}}, "tags":
        ["pulp_ansible: galaxy api collections"]}, "post": {"operationId": "pulp_ansible_galaxy_api_v2_collections_create",
        "description": "Queues a task that creates a new Collection from an uploaded
        artifact.", "parameters": [{"name": "data", "in": "body", "required": true,
        "schema": {"$ref": "#/definitions/GalaxyCollection"}}], "responses": {"201":
        {"description": "", "schema": {"$ref": "#/definitions/GalaxyCollectionRead"}}},
        "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name":
        "path", "in": "path", "required": true, "type": "string"}]}, "{collection_href}versions/":
        {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_versions_list",
        "description": "APIView for Collections by namespace/name.", "parameters":
        [{"name": "limit", "in": "query", "description": "Number of results to return
        per page.", "required": false, "type": "integer"}, {"name": "offset", "in":
        "query", "description": "The initial index from which to return the results.",
        "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description":
        "A list of fields to include in the response.", "required": false, "type":
        "string"}, {"name": "exclude_fields", "in": "query", "description": "A list
        of fields to exclude from the response.", "required": false, "type": "string"}],
        "responses": {"200": {"description": "", "schema": {"required": ["count",
        "results"], "type": "object", "properties": {"count": {"type": "integer"},
        "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous":
        {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type":
        "array", "items": {"$ref": "#/definitions/GalaxyCollectionVersionRead"}}}}}},
        "tags": ["pulp_ansible: galaxy api v2 versions"]}, "parameters": [{"name":
        "collection_href", "in": "path", "description": "URI of Collection. e.g.:
        /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type":
        "string"}]}, "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/":
        {"post": {"operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_create",
        "summary": "Upload a collection", "description": "Create an artifact and trigger
        an asynchronous task to create Collection content from it.", "parameters":
        [{"name": "file", "in": "formData", "description": "The Collection tarball.",
        "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description":
        "An optional sha256 checksum of the uploaded file.", "required": false, "type":
        "string", "minLength": 1}, {"name": "expected_namespace", "in": "formData",
        "description": "The expected ''namespace'' of the Collection to be verified
        against the metadata during import.", "required": false, "type": "string",
        "minLength": 1}, {"name": "expected_name", "in": "formData", "description":
        "The expected ''name'' of the Collection to be verified against the metadata
        during import.", "required": false, "type": "string", "minLength": 1}, {"name":
        "expected_version", "in": "formData", "description": "The expected version
        of the Collection to be verified against the metadata during import.", "required":
        false, "type": "string", "minLength": 1}], "responses": {"202": {"description":
        "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes":
        ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["pulp_ansible:
        galaxy api v3 collections"]}, "parameters": [{"name": "path", "in": "path",
        "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v3/collections/":
        {"get": {"operationId": "pulp_ansible_galaxy_api_v3_collections_list", "description":
        "ViewSet for Collections.", "parameters": [{"name": "limit", "in": "query",
        "description": "Number of results to return per page.", "required": false,
        "type": "integer"}, {"name": "offset", "in": "query", "description": "The
        initial index from which to return the results.", "required": false, "type":
        "integer"}, {"name": "fields", "in": "query", "description": "A list of fields
        to include in the response.", "required": false, "type": "string"}, {"name":
        "exclude_fields", "in": "query", "description": "A list of fields to exclude
        from the response.", "required": false, "type": "string"}], "responses": {"200":
        {"description": "", "schema": {"required": ["count", "results"], "type": "object",
        "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format":
        "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri",
        "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CollectionRead"}}}}}},
        "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name":
        "path", "in": "path", "required": true, "type": "string"}]}}, "definitions":
        {"AsyncOperationResponse": {"required": ["task"], "type": "object", "properties":
        {"task": {"title": "Task", "description": "The href of the task.", "type":
        "string", "format": "uri"}}}, "ansible.CollectionRead": {"required": ["name",
        "namespace"], "type": "object", "properties": {"name": {"title": "Name", "description":
        "The name of the Collection.", "type": "string", "minLength": 1}, "namespace":
        {"title": "Namespace", "description": "The namespace of the Collection.",
        "type": "string", "minLength": 1}}}, "ArtifactRead": {"type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "file": {"title": "File", "description": "The stored file.", "type": "string",
        "readOnly": true}, "size": {"title": "Size", "description": "The size of the
        file in bytes.", "type": "integer"}, "md5": {"title": "Md5", "description":
        "The MD5 checksum of the file if available.", "type": "string", "minLength":
        1, "x-nullable": true}, "sha1": {"title": "Sha1", "description": "The SHA-1
        checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable":
        true}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum
        of the file if available.", "type": "string", "minLength": 1, "x-nullable":
        true}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum
        of the file if available.", "type": "string", "minLength": 1, "x-nullable":
        true}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum
        of the file if available.", "type": "string", "minLength": 1, "x-nullable":
        true}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum
        of the file if available.", "type": "string", "minLength": 1, "x-nullable":
        true}}}, "ansible.Tag": {"type": "object", "properties": {"name": {"title":
        "Name", "description": "The name of the Tag.", "type": "string", "readOnly":
        true, "minLength": 1}}}, "ansible.CollectionVersionRead": {"required": ["artifact",
        "id", "authors", "contents", "dependencies", "description", "docs_blob", "documentation",
        "homepage", "issues", "certification", "license", "name", "namespace", "repository",
        "version"], "type": "object", "properties": {"artifact": {"title": "Artifact",
        "description": "Artifact file representing the physical content", "type":
        "string", "format": "uri"}, "pulp_created": {"title": "Pulp created", "description":
        "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly":
        true}, "pulp_href": {"title": "Pulp href", "type": "string", "format": "uri",
        "readOnly": true}, "md5": {"title": "Md5", "description": "The MD5 checksum
        if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1":
        {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type":
        "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224",
        "description": "The SHA-224 checksum if available.", "type": "string", "readOnly":
        true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256
        checksum if available.", "type": "string", "readOnly": true, "minLength":
        1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if
        available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512":
        {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type":
        "string", "readOnly": true, "minLength": 1}, "id": {"title": "Id", "description":
        "A collection identifier.", "type": "string", "format": "uuid"}, "authors":
        {"description": "A list of the CollectionVersion content''s authors.", "type":
        "array", "items": {"type": "string", "maxLength": 64, "minLength": 1}}, "contents":
        {"description": "A JSON field with data about the contents.", "type": "array",
        "items": {"type": "object", "additionalProperties": {"type": "string"}}},
        "dependencies": {"title": "Dependencies", "description": "A dict declaring
        Collections that this collection requires to be installed for it to be usable.",
        "type": "object", "additionalProperties": {"type": "string"}}, "description":
        {"title": "Description", "description": "A short summary description of the
        collection.", "type": "string"}, "docs_blob": {"title": "Docs blob", "description":
        "A JSON field holding the various documentation blobs in the collection.",
        "type": "object", "additionalProperties": {"type": "string"}}, "documentation":
        {"title": "Documentation", "description": "The URL to any online docs.", "type":
        "string", "format": "uri", "maxLength": 2000}, "homepage": {"title": "Homepage",
        "description": "The URL to the homepage of the collection/project.", "type":
        "string", "format": "uri", "maxLength": 2000}, "issues": {"title": "Issues",
        "description": "The URL to the collection issue tracker.", "type": "string",
        "format": "uri", "maxLength": 2000}, "certification": {"title": "Certification",
        "description": "Indicates that the version is certified", "type": "string",
        "minLength": 1}, "license": {"description": "A list of licenses for content
        inside of a collection.", "type": "array", "items": {"type": "string", "maxLength":
        32, "minLength": 1}}, "name": {"title": "Name", "description": "The name of
        the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "namespace":
        {"title": "Namespace", "description": "The namespace of the collection.",
        "type": "string", "maxLength": 32, "minLength": 1}, "repository": {"title":
        "Repository", "description": "The URL of the originating SCM repository.",
        "type": "string", "format": "uri", "maxLength": 2000}, "tags": {"type": "array",
        "items": {"$ref": "#/definitions/ansible.Tag"}, "readOnly": true}, "version":
        {"title": "Version", "description": "The version of the collection.", "type":
        "string", "maxLength": 32, "minLength": 1}, "deprecated": {"title": "Deprecated",
        "description": "Whether or not the collection has been deprecated.", "type":
        "boolean", "readOnly": true}}}, "ansible.CollectionVersion": {"required":
        ["artifact", "id", "authors", "contents", "dependencies", "description", "docs_blob",
        "documentation", "homepage", "issues", "certification", "license", "name",
        "namespace", "repository", "version"], "type": "object", "properties": {"artifact":
        {"title": "Artifact", "description": "Artifact file representing the physical
        content", "type": "string", "format": "uri"}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "md5": {"title": "Md5", "description":
        "The MD5 checksum if available.", "type": "string", "readOnly": true, "minLength":
        1}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum if available.",
        "type": "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224",
        "description": "The SHA-224 checksum if available.", "type": "string", "readOnly":
        true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256
        checksum if available.", "type": "string", "readOnly": true, "minLength":
        1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if
        available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512":
        {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type":
        "string", "readOnly": true, "minLength": 1}, "id": {"title": "Id", "description":
        "A collection identifier.", "type": "string", "format": "uuid"}, "authors":
        {"description": "A list of the CollectionVersion content''s authors.", "type":
        "array", "items": {"type": "string", "maxLength": 64, "minLength": 1}}, "contents":
        {"description": "A JSON field with data about the contents.", "type": "array",
        "items": {"type": "object", "additionalProperties": {"type": "string"}}},
        "dependencies": {"title": "Dependencies", "description": "A dict declaring
        Collections that this collection requires to be installed for it to be usable.",
        "type": "object", "additionalProperties": {"type": "string"}}, "description":
        {"title": "Description", "description": "A short summary description of the
        collection.", "type": "string"}, "docs_blob": {"title": "Docs blob", "description":
        "A JSON field holding the various documentation blobs in the collection.",
        "type": "object", "additionalProperties": {"type": "string"}}, "documentation":
        {"title": "Documentation", "description": "The URL to any online docs.", "type":
        "string", "format": "uri", "maxLength": 2000}, "homepage": {"title": "Homepage",
        "description": "The URL to the homepage of the collection/project.", "type":
        "string", "format": "uri", "maxLength": 2000}, "issues": {"title": "Issues",
        "description": "The URL to the collection issue tracker.", "type": "string",
        "format": "uri", "maxLength": 2000}, "certification": {"title": "Certification",
        "description": "Indicates that the version is certified", "type": "string",
        "minLength": 1}, "license": {"description": "A list of licenses for content
        inside of a collection.", "type": "array", "items": {"type": "string", "maxLength":
        32, "minLength": 1}}, "name": {"title": "Name", "description": "The name of
        the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "namespace":
        {"title": "Namespace", "description": "The namespace of the collection.",
        "type": "string", "maxLength": 32, "minLength": 1}, "repository": {"title":
        "Repository", "description": "The URL of the originating SCM repository.",
        "type": "string", "format": "uri", "maxLength": 2000}, "tags": {"type": "array",
        "items": {"$ref": "#/definitions/ansible.Tag"}, "readOnly": true}, "version":
        {"title": "Version", "description": "The version of the collection.", "type":
        "string", "maxLength": 32, "minLength": 1}, "deprecated": {"title": "Deprecated",
        "description": "Whether or not the collection has been deprecated.", "type":
        "boolean", "readOnly": true}}}, "ansible.RoleRead": {"required": ["artifact",
        "version", "name", "namespace"], "type": "object", "properties": {"artifact":
        {"title": "Artifact", "description": "Artifact file representing the physical
        content", "type": "string", "format": "uri"}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "version": {"title": "Version",
        "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string",
        "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength":
        1}}}, "ansible.Role": {"required": ["artifact", "version", "name", "namespace"],
        "type": "object", "properties": {"artifact": {"title": "Artifact", "description":
        "Artifact file representing the physical content", "type": "string", "format":
        "uri"}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "version": {"title": "Version", "type": "string", "minLength": 1},
        "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace":
        {"title": "Namespace", "type": "string", "minLength": 1}}}, "container.BlobRead":
        {"required": ["artifact", "digest", "media_type"], "type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "artifact": {"title": "Artifact", "description": "Artifact file representing
        the physical content", "type": "string", "format": "uri"}, "digest": {"title":
        "Digest", "description": "sha256 of the Blob file", "type": "string", "minLength":
        1}, "media_type": {"title": "Media type", "description": "Blob media type
        of the file", "type": "string", "minLength": 1}}}, "container.ManifestRead":
        {"required": ["artifact", "digest", "schema_version", "media_type", "listed_manifests",
        "blobs"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact",
        "description": "Artifact file representing the physical content", "type":
        "string", "format": "uri"}, "digest": {"title": "Digest", "description": "sha256
        of the Manifest file", "type": "string", "minLength": 1}, "schema_version":
        {"title": "Schema version", "description": "Manifest schema version", "type":
        "integer"}, "media_type": {"title": "Media type", "description": "Manifest
        media type of the file", "type": "string", "minLength": 1}, "listed_manifests":
        {"description": "Manifests that are referenced by this Manifest List", "type":
        "array", "items": {"description": "Manifests that are referenced by this Manifest
        List", "type": "string", "format": "uri"}, "uniqueItems": true}, "config_blob":
        {"title": "Config blob", "description": "Blob that contains configuration
        for this Manifest", "type": "string", "format": "uri"}, "blobs": {"description":
        "Blobs that are referenced by this Manifest", "type": "array", "items": {"description":
        "Blobs that are referenced by this Manifest", "type": "string", "format":
        "uri"}, "uniqueItems": true}}}, "container.TagRead": {"required": ["artifact",
        "name", "tagged_manifest"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title":
        "Artifact", "description": "Artifact file representing the physical content",
        "type": "string", "format": "uri"}, "name": {"title": "Name", "description":
        "Tag name", "type": "string", "minLength": 1}, "tagged_manifest": {"title":
        "Tagged manifest", "description": "Manifest that is tagged", "type": "string",
        "format": "uri"}}}, "file.FileContentRead": {"required": ["relative_path"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description":
        "Artifact file representing the physical content", "type": "string", "format":
        "uri"}, "relative_path": {"title": "Relative path", "description": "Path where
        the artifact is located relative to distributions base_path", "type": "string",
        "minLength": 1}, "md5": {"title": "Md5", "description": "The MD5 checksum
        if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1":
        {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type":
        "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224",
        "description": "The SHA-224 checksum if available.", "type": "string", "readOnly":
        true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256
        checksum if available.", "type": "string", "readOnly": true, "minLength":
        1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if
        available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512":
        {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type":
        "string", "readOnly": true, "minLength": 1}}}, "python.PythonPackageContentRead":
        {"required": ["filename"], "type": "object", "properties": {"pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "artifact": {"title":
        "Artifact", "description": "Artifact file representing the physical content",
        "type": "string", "format": "uri"}, "filename": {"title": "Filename", "description":
        "The name of the distribution package, usually of the format: {distribution}-{version}(-{build
        tag})?-{python tag}-{abi tag}-{platform tag}.{packagetype}", "type": "string",
        "minLength": 1}, "packagetype": {"title": "Packagetype", "description": "The
        type of the distribution package (e.g. sdist, bdist_wheel, bdist_egg, etc)",
        "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name",
        "description": "The name of the python project.", "type": "string", "readOnly":
        true, "minLength": 1}, "version": {"title": "Version", "description": "The
        packages version number.", "type": "string", "readOnly": true, "minLength":
        1}, "metadata_version": {"title": "Metadata version", "description": "Version
        of the file format", "type": "string", "readOnly": true, "minLength": 1},
        "summary": {"title": "Summary", "description": "A one-line summary of what
        the package does.", "type": "string"}, "description": {"title": "Description",
        "description": "A longer description of the package that can run to several
        paragraphs.", "type": "string"}, "keywords": {"title": "Keywords", "description":
        "Additional keywords to be used to assist searching for the package in a larger
        catalog.", "type": "string"}, "home_page": {"title": "Home page", "description":
        "The URL for the package''s home page.", "type": "string"}, "download_url":
        {"title": "Download url", "description": "Legacy field denoting the URL from
        which this package can be downloaded.", "type": "string"}, "author": {"title":
        "Author", "description": "Text containing the author''s name. Contact information
        can also be added, separated with newlines.", "type": "string"}, "author_email":
        {"title": "Author email", "description": "The author''s e-mail address. ",
        "type": "string"}, "maintainer": {"title": "Maintainer", "description": "The
        maintainer''s name at a minimum; additional contact information may be provided.",
        "type": "string"}, "maintainer_email": {"title": "Maintainer email", "description":
        "The maintainer''s e-mail address.", "type": "string"}, "license": {"title":
        "License", "description": "Text indicating the license covering the distribution",
        "type": "string"}, "requires_python": {"title": "Requires python", "description":
        "The Python version(s) that the distribution is guaranteed to be compatible
        with.", "type": "string"}, "project_url": {"title": "Project url", "description":
        "A browsable URL for the project and a label for it, separated by a comma.",
        "type": "string"}, "platform": {"title": "Platform", "description": "A comma-separated
        list of platform specifications, summarizing the operating systems supported
        by the package.", "type": "string"}, "supported_platform": {"title": "Supported
        platform", "description": "Field to specify the OS and CPU for which the binary
        package was compiled. ", "type": "string"}, "requires_dist": {"title": "Requires
        dist", "description": "A JSON list containing names of some other distutils
        project required by this distribution.", "type": "object", "default": []},
        "provides_dist": {"title": "Provides dist", "description": "A JSON list containing
        names of a Distutils project which is contained within this distribution.",
        "type": "object", "default": []}, "obsoletes_dist": {"title": "Obsoletes dist",
        "description": "A JSON list containing names of a distutils project''s distribution
        which this distribution renders obsolete, meaning that the two projects should
        not be installed at the same time.", "type": "object", "default": []}, "requires_external":
        {"title": "Requires external", "description": "A JSON list containing some
        dependency in the system that the distribution is to be used.", "type": "object",
        "default": []}, "classifiers": {"title": "Classifiers", "description": "A
        JSON list containing classification values for a Python package.", "type":
        "object", "default": []}}}, "certguard.RHSMCertGuardRead": {"required": ["name",
        "ca_certificate"], "type": "object", "properties": {"pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name",
        "description": "The unique name.", "type": "string", "minLength": 1}, "description":
        {"title": "Description", "description": "An optional description.", "type":
        "string", "minLength": 1, "x-nullable": true}, "ca_certificate": {"title":
        "Ca certificate", "description": "The Certificate Authority (CA) certificate.",
        "type": "string", "minLength": 1}}}, "certguard.RHSMCertGuard": {"required":
        ["name", "ca_certificate"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "The unique name.", "type": "string", "minLength":
        1}, "description": {"title": "Description", "description": "An optional description.",
        "type": "string", "minLength": 1, "x-nullable": true}, "ca_certificate": {"title":
        "Ca certificate", "description": "The Certificate Authority (CA) certificate.",
        "type": "string", "minLength": 1}}}, "certguard.X509CertGuardRead": {"required":
        ["name", "ca_certificate"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "The unique name.", "type": "string", "minLength":
        1}, "description": {"title": "Description", "description": "An optional description.",
        "type": "string", "minLength": 1, "x-nullable": true}, "ca_certificate": {"title":
        "Ca certificate", "description": "The Certificate Authority (CA) certificate.",
        "type": "string", "minLength": 1}}}, "certguard.X509CertGuard": {"required":
        ["name", "ca_certificate"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "The unique name.", "type": "string", "minLength":
        1}, "description": {"title": "Description", "description": "An optional description.",
        "type": "string", "minLength": 1, "x-nullable": true}, "ca_certificate": {"title":
        "Ca certificate", "description": "The Certificate Authority (CA) certificate.",
        "type": "string", "minLength": 1}}}, "ansible.AnsibleDistributionRead": {"required":
        ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "base_path": {"title":
        "Base path", "description": "The base (relative) path component of the published
        url. Avoid paths that                     overlap with other distribution
        base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength":
        1}, "content_guard": {"title": "Content guard", "description": "An optional
        content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "repository": {"title": "Repository", "description":
        "The latest RepositoryVersion for this Repository will be served.", "type":
        "string", "format": "uri", "x-nullable": true}, "repository_version": {"title":
        "Repository version", "description": "RepositoryVersion to be served", "type":
        "string", "format": "uri", "x-nullable": true}, "client_url": {"title": "Client
        url", "description": "The URL of a Collection content source.", "type": "string",
        "readOnly": true}}}, "ansible.AnsibleDistribution": {"required": ["base_path",
        "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "content_guard":
        {"title": "Content guard", "description": "An optional content-guard.", "type":
        "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name",
        "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string",
        "minLength": 1}, "repository": {"title": "Repository", "description": "The
        latest RepositoryVersion for this Repository will be served.", "type": "string",
        "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository
        version", "description": "RepositoryVersion to be served", "type": "string",
        "format": "uri", "x-nullable": true}, "client_url": {"title": "Client url",
        "description": "The URL of a Collection content source.", "type": "string",
        "readOnly": true}}}, "container.ContainerDistributionRead": {"required": ["base_path",
        "name"], "type": "object", "properties": {"base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "content_guard": {"title": "Content guard",
        "description": "An optional content-guard.", "type": "string", "format": "uri",
        "x-nullable": true}, "repository": {"title": "Repository", "description":
        "The latest RepositoryVersion for this Repository will be served.", "type":
        "string", "format": "uri", "x-nullable": true}, "pulp_href": {"title": "Pulp
        href", "type": "string", "format": "uri", "readOnly": true}, "repository_version":
        {"title": "Repository version", "description": "RepositoryVersion to be served",
        "type": "string", "format": "uri", "x-nullable": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "registry_path": {"title": "Registry
        path", "description": "The Registry hostame/name/ to use with docker pull
        command defined by this distribution.", "type": "string", "readOnly": true,
        "minLength": 1}}}, "container.ContainerDistribution": {"required": ["base_path",
        "name"], "type": "object", "properties": {"base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "content_guard": {"title": "Content guard",
        "description": "An optional content-guard.", "type": "string", "format": "uri",
        "x-nullable": true}, "repository": {"title": "Repository", "description":
        "The latest RepositoryVersion for this Repository will be served.", "type":
        "string", "format": "uri", "x-nullable": true}, "pulp_href": {"title": "Pulp
        href", "type": "string", "format": "uri", "readOnly": true}, "repository_version":
        {"title": "Repository version", "description": "RepositoryVersion to be served",
        "type": "string", "format": "uri", "x-nullable": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "registry_path": {"title": "Registry
        path", "description": "The Registry hostame/name/ to use with docker pull
        command defined by this distribution.", "type": "string", "readOnly": true,
        "minLength": 1}}}, "file.FileDistributionRead": {"required": ["base_path",
        "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url":
        {"title": "Base url", "description": "The URL for accessing the publication
        as defined by this distribution.", "type": "string", "readOnly": true, "minLength":
        1}, "content_guard": {"title": "Content guard", "description": "An optional
        content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "publication": {"title": "Publication",
        "description": "Publication to be served", "type": "string", "format": "uri",
        "x-nullable": true}}}, "file.FileDistribution": {"required": ["base_path",
        "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url":
        {"title": "Base url", "description": "The URL for accessing the publication
        as defined by this distribution.", "type": "string", "readOnly": true, "minLength":
        1}, "content_guard": {"title": "Content guard", "description": "An optional
        content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "publication": {"title": "Publication",
        "description": "Publication to be served", "type": "string", "format": "uri",
        "x-nullable": true}}}, "python.PythonDistributionRead": {"required": ["base_path",
        "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url":
        {"title": "Base url", "description": "The URL for accessing the publication
        as defined by this distribution.", "type": "string", "readOnly": true, "minLength":
        1}, "content_guard": {"title": "Content guard", "description": "An optional
        content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "publication": {"title": "Publication",
        "description": "Publication to be served", "type": "string", "format": "uri",
        "x-nullable": true}}}, "python.PythonDistribution": {"required": ["base_path",
        "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path",
        "description": "The base (relative) path component of the published url. Avoid
        paths that                     overlap with other distribution base paths
        (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url":
        {"title": "Base url", "description": "The URL for accessing the publication
        as defined by this distribution.", "type": "string", "readOnly": true, "minLength":
        1}, "content_guard": {"title": "Content guard", "description": "An optional
        content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name":
        {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.",
        "type": "string", "minLength": 1}, "publication": {"title": "Publication",
        "description": "Publication to be served", "type": "string", "format": "uri",
        "x-nullable": true}}}, "PulpExporterRead": {"required": ["name", "path", "repositories"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "Unique
        name of the file system exporter.", "type": "string", "minLength": 1}, "path":
        {"title": "Path", "description": "File system directory to store exported
        tar.gzs.", "type": "string", "minLength": 1}, "repositories": {"type": "array",
        "items": {"type": "string", "format": "uri"}, "uniqueItems": true}, "last_export":
        {"title": "Last export", "description": "Last attempted export for this PulpExporter",
        "type": "string", "format": "uri", "x-nullable": true}}}, "PulpExporter":
        {"required": ["name", "path", "repositories"], "type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "name": {"title": "Name", "description": "Unique name of the file system exporter.",
        "type": "string", "minLength": 1}, "path": {"title": "Path", "description":
        "File system directory to store exported tar.gzs.", "type": "string", "minLength":
        1}, "repositories": {"type": "array", "items": {"type": "string", "format":
        "uri"}, "uniqueItems": true}, "last_export": {"title": "Last export", "description":
        "Last attempted export for this PulpExporter", "type": "string", "format":
        "uri", "x-nullable": true}}}, "ExportedResources": {"description": "Resources
        that were exported.", "type": "object", "properties": {}}, "PulpExportRead":
        {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "task": {"title": "Task", "description": "A
        URI of the task that ran the Export.", "type": "string", "format": "uri",
        "x-nullable": true}, "exported_resources": {"description": "Resources that
        were exported.", "type": "array", "items": {"$ref": "#/definitions/ExportedResources"},
        "readOnly": true}, "params": {"title": "Params", "description": "Any additional
        parameters that were used to create the export.", "type": "object", "readOnly":
        true}, "output_file_info": {"title": "Output file info", "description": "Dictionary
        of filename: sha256hash entries for export-output-file(s)", "type": "object",
        "readOnly": true}}}, "PulpExport": {"type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "task": {"title":
        "Task", "description": "A URI of the task that ran the Export.", "type": "string",
        "format": "uri", "x-nullable": true}, "exported_resources": {"description":
        "Resources that were exported.", "type": "array", "items": {"$ref": "#/definitions/ExportedResources"},
        "readOnly": true}, "params": {"title": "Params", "description": "Any additional
        parameters that were used to create the export.", "type": "object", "readOnly":
        true}, "full": {"title": "Full", "description": "Do a Full (true) or Incremental
        (false) export.", "type": "boolean", "default": true}, "dry_run": {"title":
        "Dry run", "description": "Generate report on what would be exported and disk-space
        required.", "type": "boolean", "default": false}, "versions": {"description":
        "List of explicit repo-version hrefs to export", "type": "array", "items":
        {"description": "List of explicit repo-version hrefs to export", "type": "string",
        "format": "uri"}, "uniqueItems": true}, "chunk_size": {"title": "Chunk size",
        "description": "Chunk export-tarfile into pieces of chunk_size bytes.Recognizes
        units of B/KB/MB/GB/TB.", "type": "string", "minLength": 1}, "output_file_info":
        {"title": "Output file info", "description": "Dictionary of filename: sha256hash
        entries for export-output-file(s)", "type": "object", "readOnly": true}}},
        "file.FileFilesystemExporterRead": {"required": ["name", "path"], "type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "name": {"title": "Name", "description": "Unique name of
        the file system exporter.", "type": "string", "minLength": 1}, "path": {"title":
        "Path", "description": "File system location to export to.", "type": "string",
        "minLength": 1}}}, "file.FileFilesystemExporter": {"required": ["name", "path"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "Unique
        name of the file system exporter.", "type": "string", "minLength": 1}, "path":
        {"title": "Path", "description": "File system location to export to.", "type":
        "string", "minLength": 1}}}, "ExportRead": {"type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "task": {"title": "Task", "description": "A URI of the task that ran the Export.",
        "type": "string", "format": "uri", "x-nullable": true}, "exported_resources":
        {"description": "Resources that were exported.", "type": "array", "items":
        {"$ref": "#/definitions/ExportedResources"}, "readOnly": true}, "params":
        {"title": "Params", "description": "Any additional parameters that were used
        to create the export.", "type": "object", "readOnly": true}}}, "PublicationExport":
        {"required": ["publication"], "type": "object", "properties": {"publication":
        {"title": "Publication", "description": "A URI of the publication to be exported.",
        "type": "string", "format": "uri"}}}, "PulpImporterRead": {"required": ["name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "Unique
        name of the Importer.", "type": "string", "minLength": 1}, "repo_mapping":
        {"title": "Repo mapping", "description": "Mapping of repo names in an export
        file to the repo names in Pulp. For example, if the export has a repo named
        ''foo'' and the repo to import content into was ''bar'', the mapping would
        be \"{''foo'': ''bar''}\".", "type": "object", "additionalProperties": {"type":
        "string", "minLength": 1}}}}, "PulpImporter": {"required": ["name"], "type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "name": {"title": "Name", "description": "Unique name of
        the Importer.", "type": "string", "minLength": 1}, "repo_mapping": {"title":
        "Repo mapping", "description": "Mapping of repo names in an export file to
        the repo names in Pulp. For example, if the export has a repo named ''foo''
        and the repo to import content into was ''bar'', the mapping would be \"{''foo'':
        ''bar''}\".", "type": "object", "additionalProperties": {"type": "string",
        "minLength": 1}}}}, "ImportRead": {"required": ["task", "params"], "type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "task": {"title": "Task", "description": "A URI of the
        Task that ran the Import.", "type": "string", "format": "uri"}, "params":
        {"title": "Params", "description": "Any parameters that were used to create
        the import.", "type": "object"}}}, "PulpImport": {"required": ["path"], "type":
        "object", "properties": {"path": {"title": "Path", "description": "Path to
        export that will be imported.", "type": "string", "minLength": 1}}}, "file.FilePublicationRead":
        {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "repository_version": {"title": "Repository
        version", "type": "string", "format": "uri"}, "repository": {"title": "Repository",
        "description": "A URI of the repository to be published.", "type": "string",
        "format": "uri"}, "distributions": {"description": "This publication is currently
        hosted as defined by these distributions.", "type": "array", "items": {"description":
        "This publication is currently hosted as defined by these distributions.",
        "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true},
        "manifest": {"title": "Manifest", "description": "Filename to use for manifest
        file containing metadata for all the files.", "type": "string", "default":
        "PULP_MANIFEST", "minLength": 1}}}, "file.FilePublication": {"type": "object",
        "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format":
        "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description":
        "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly":
        true}, "repository_version": {"title": "Repository version", "type": "string",
        "format": "uri"}, "repository": {"title": "Repository", "description": "A
        URI of the repository to be published.", "type": "string", "format": "uri"},
        "distributions": {"description": "This publication is currently hosted as
        defined by these distributions.", "type": "array", "items": {"description":
        "This publication is currently hosted as defined by these distributions.",
        "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true},
        "manifest": {"title": "Manifest", "description": "Filename to use for manifest
        file containing metadata for all the files.", "type": "string", "default":
        "PULP_MANIFEST", "minLength": 1}}}, "python.PythonPublicationRead": {"type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "repository_version": {"title": "Repository version", "type":
        "string", "format": "uri"}, "repository": {"title": "Repository", "description":
        "A URI of the repository to be published.", "type": "string", "format": "uri"},
        "distributions": {"description": "This publication is currently being hosted
        as configured by these distributions.", "type": "array", "items": {"description":
        "This publication is currently being hosted as configured by these distributions.",
        "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}}},
        "python.PythonPublication": {"type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "repository_version":
        {"title": "Repository version", "type": "string", "format": "uri"}, "repository":
        {"title": "Repository", "description": "A URI of the repository to be published.",
        "type": "string", "format": "uri"}, "distributions": {"description": "This
        publication is currently being hosted as configured by these distributions.",
        "type": "array", "items": {"description": "This publication is currently being
        hosted as configured by these distributions.", "type": "string", "format":
        "uri"}, "readOnly": true, "uniqueItems": true}}}, "TagRead": {"type": "object",
        "properties": {"name": {"title": "Name", "type": "string", "readOnly": true,
        "minLength": 1}}}, "ansible.AnsibleRemoteRead": {"required": ["name", "url"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A
        unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title":
        "Url", "description": "The URL of an external content source.", "type": "string",
        "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string
        containing the PEM encoded CA certificate used to validate the server certificate
        presented by the remote server. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title":
        "Client cert", "description": "A string containing the PEM encoded client
        certificate used for authentication. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title":
        "Client key", "description": "A PEM encoded private key used for authentication.",
        "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title":
        "Tls validation", "description": "If True, TLS peer validation must be performed.",
        "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The
        proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength":
        1, "x-nullable": true}, "username": {"title": "Username", "description": "The
        username to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "password": {"title": "Password", "description": "The
        password to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated",
        "description": "Timestamp of the most recent update of the remote.", "type":
        "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "The policy to use when downloading content.", "type": "string",
        "enum": ["immediate", "When syncing, download all metadata and content now."],
        "default": "immediate"}}}, "ansible.AnsibleRemote": {"required": ["name",
        "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description":
        "A unique name for this remote.", "type": "string", "minLength": 1}, "url":
        {"title": "Url", "description": "The URL of an external content source.",
        "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description":
        "A string containing the PEM encoded CA certificate used to validate the server
        certificate presented by the remote server. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert":
        {"title": "Client cert", "description": "A string containing the PEM encoded
        client certificate used for authentication. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key":
        {"title": "Client key", "description": "A PEM encoded private key used for
        authentication.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation":
        {"title": "Tls validation", "description": "If True, TLS peer validation must
        be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description":
        "The proxy URL. Format: scheme://user:password@host:port", "type": "string",
        "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description":
        "The username to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description":
        "The password to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp
        last updated", "description": "Timestamp of the most recent update of the
        remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "The policy to use when downloading content.", "type": "string",
        "enum": ["immediate", "When syncing, download all metadata and content now."],
        "default": "immediate"}}}, "ansible.CollectionRemoteRead": {"required": ["name",
        "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description":
        "A unique name for this remote.", "type": "string", "minLength": 1}, "url":
        {"title": "Url", "description": "The URL of an external content source.",
        "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description":
        "A string containing the PEM encoded CA certificate used to validate the server
        certificate presented by the remote server. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert":
        {"title": "Client cert", "description": "A string containing the PEM encoded
        client certificate used for authentication. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key":
        {"title": "Client key", "description": "A PEM encoded private key used for
        authentication.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation":
        {"title": "Tls validation", "description": "If True, TLS peer validation must
        be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description":
        "The proxy URL. Format: scheme://user:password@host:port", "type": "string",
        "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description":
        "The username to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description":
        "The password to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp
        last updated", "description": "Timestamp of the most recent update of the
        remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "The policy to use when downloading content.", "type": "string",
        "enum": ["immediate", "When syncing, download all metadata and content now."],
        "default": "immediate"}, "requirements_file": {"title": "Requirements file",
        "description": "The string version of Collection requirements yaml.", "type":
        "string", "minLength": 1, "x-nullable": true}}}, "ansible.CollectionRemote":
        {"required": ["name", "url"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "A unique name for this remote.", "type": "string",
        "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external
        content source.", "type": "string", "minLength": 1}, "ca_cert": {"title":
        "Ca cert", "description": "A string containing the PEM encoded CA certificate
        used to validate the server certificate presented by the remote server. All
        new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable":
        true}, "client_cert": {"title": "Client cert", "description": "A string containing
        the PEM encoded client certificate used for authentication. All new line characters
        must be escaped.", "type": "string", "minLength": 1, "x-nullable": true},
        "client_key": {"title": "Client key", "description": "A PEM encoded private
        key used for authentication.", "type": "string", "minLength": 1, "x-nullable":
        true}, "tls_validation": {"title": "Tls validation", "description": "If True,
        TLS peer validation must be performed.", "type": "boolean"}, "proxy_url":
        {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port",
        "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title":
        "Username", "description": "The username to be used for authentication when
        syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password":
        {"title": "Password", "description": "The password to be used for authentication
        when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated":
        {"title": "Pulp last updated", "description": "Timestamp of the most recent
        update of the remote.", "type": "string", "format": "date-time", "readOnly":
        true}, "download_concurrency": {"title": "Download concurrency", "description":
        "Total number of simultaneous connections.", "type": "integer", "minimum":
        1}, "policy": {"title": "Policy", "description": "The policy to use when downloading
        content.", "type": "string", "enum": ["immediate", "When syncing, download
        all metadata and content now."], "default": "immediate"}, "requirements_file":
        {"title": "Requirements file", "description": "The string version of Collection
        requirements yaml.", "type": "string", "minLength": 1, "x-nullable": true}}},
        "container.ContainerRemoteRead": {"required": ["name", "url", "upstream_name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A
        unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title":
        "Url", "description": "The URL of an external content source.", "type": "string",
        "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string
        containing the PEM encoded CA certificate used to validate the server certificate
        presented by the remote server. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title":
        "Client cert", "description": "A string containing the PEM encoded client
        certificate used for authentication. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title":
        "Client key", "description": "A PEM encoded private key used for authentication.",
        "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title":
        "Tls validation", "description": "If True, TLS peer validation must be performed.",
        "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The
        proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength":
        1, "x-nullable": true}, "username": {"title": "Username", "description": "The
        username to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "password": {"title": "Password", "description": "The
        password to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated",
        "description": "Timestamp of the most recent update of the remote.", "type":
        "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "\nimmediate - All manifests and blobs are downloaded and saved
        during a sync.\non_demand - Only tags and manifests are downloaded. Blobs
        are not\n            downloaded until they are requested for the first time
        by a client.\nstreamed - Blobs are streamed to the client with every request
        and never saved.\n", "type": "string", "enum": ["immediate", "on_demand",
        "streamed"], "default": "immediate"}, "upstream_name": {"title": "Upstream
        name", "description": "Name of the upstream repository", "type": "string",
        "minLength": 1}, "whitelist_tags": {"description": "A list of whitelisted
        tags to sync", "type": "array", "items": {"type": "string", "maxLength": 255,
        "minLength": 1}, "x-nullable": true}}}, "container.ContainerRemote": {"required":
        ["name", "url", "upstream_name"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "A unique name for this remote.", "type": "string",
        "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external
        content source.", "type": "string", "minLength": 1}, "ca_cert": {"title":
        "Ca cert", "description": "A string containing the PEM encoded CA certificate
        used to validate the server certificate presented by the remote server. All
        new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable":
        true}, "client_cert": {"title": "Client cert", "description": "A string containing
        the PEM encoded client certificate used for authentication. All new line characters
        must be escaped.", "type": "string", "minLength": 1, "x-nullable": true},
        "client_key": {"title": "Client key", "description": "A PEM encoded private
        key used for authentication.", "type": "string", "minLength": 1, "x-nullable":
        true}, "tls_validation": {"title": "Tls validation", "description": "If True,
        TLS peer validation must be performed.", "type": "boolean"}, "proxy_url":
        {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port",
        "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title":
        "Username", "description": "The username to be used for authentication when
        syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password":
        {"title": "Password", "description": "The password to be used for authentication
        when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated":
        {"title": "Pulp last updated", "description": "Timestamp of the most recent
        update of the remote.", "type": "string", "format": "date-time", "readOnly":
        true}, "download_concurrency": {"title": "Download concurrency", "description":
        "Total number of simultaneous connections.", "type": "integer", "minimum":
        1}, "policy": {"title": "Policy", "description": "\nimmediate - All manifests
        and blobs are downloaded and saved during a sync.\non_demand - Only tags and
        manifests are downloaded. Blobs are not\n            downloaded until they
        are requested for the first time by a client.\nstreamed - Blobs are streamed
        to the client with every request and never saved.\n", "type": "string", "enum":
        ["immediate", "on_demand", "streamed"], "default": "immediate"}, "upstream_name":
        {"title": "Upstream name", "description": "Name of the upstream repository",
        "type": "string", "minLength": 1}, "whitelist_tags": {"description": "A list
        of whitelisted tags to sync", "type": "array", "items": {"type": "string",
        "maxLength": 255, "minLength": 1}, "x-nullable": true}}}, "file.FileRemoteRead":
        {"required": ["name", "url"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "A unique name for this remote.", "type": "string",
        "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external
        content source.", "type": "string", "minLength": 1}, "ca_cert": {"title":
        "Ca cert", "description": "A string containing the PEM encoded CA certificate
        used to validate the server certificate presented by the remote server. All
        new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable":
        true}, "client_cert": {"title": "Client cert", "description": "A string containing
        the PEM encoded client certificate used for authentication. All new line characters
        must be escaped.", "type": "string", "minLength": 1, "x-nullable": true},
        "client_key": {"title": "Client key", "description": "A PEM encoded private
        key used for authentication.", "type": "string", "minLength": 1, "x-nullable":
        true}, "tls_validation": {"title": "Tls validation", "description": "If True,
        TLS peer validation must be performed.", "type": "boolean"}, "proxy_url":
        {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port",
        "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title":
        "Username", "description": "The username to be used for authentication when
        syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password":
        {"title": "Password", "description": "The password to be used for authentication
        when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated":
        {"title": "Pulp last updated", "description": "Timestamp of the most recent
        update of the remote.", "type": "string", "format": "date-time", "readOnly":
        true}, "download_concurrency": {"title": "Download concurrency", "description":
        "Total number of simultaneous connections.", "type": "integer", "minimum":
        1}, "policy": {"title": "Policy", "description": "The policy to use when downloading
        content. The possible values include: ''immediate'', ''on_demand'', and ''streamed''.
        ''immediate'' is the default.", "type": "string", "enum": ["immediate", "on_demand",
        "streamed"], "default": "immediate"}}}, "file.FileRemote": {"required": ["name",
        "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description":
        "A unique name for this remote.", "type": "string", "minLength": 1}, "url":
        {"title": "Url", "description": "The URL of an external content source.",
        "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description":
        "A string containing the PEM encoded CA certificate used to validate the server
        certificate presented by the remote server. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert":
        {"title": "Client cert", "description": "A string containing the PEM encoded
        client certificate used for authentication. All new line characters must be
        escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key":
        {"title": "Client key", "description": "A PEM encoded private key used for
        authentication.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation":
        {"title": "Tls validation", "description": "If True, TLS peer validation must
        be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description":
        "The proxy URL. Format: scheme://user:password@host:port", "type": "string",
        "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description":
        "The username to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description":
        "The password to be used for authentication when syncing.", "type": "string",
        "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp
        last updated", "description": "Timestamp of the most recent update of the
        remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "The policy to use when downloading content. The possible values
        include: ''immediate'', ''on_demand'', and ''streamed''. ''immediate'' is
        the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"],
        "default": "immediate"}}}, "ProjectSpecifier": {"description": "AKA \"Whitelist\".
        A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\":
        \"django\", \"version_specifier\":\"~=2.0\"}]\n", "required": ["name"], "type":
        "object", "properties": {"name": {"title": "Name", "description": "A python
        project name.", "type": "string", "minLength": 1}, "version_specifier": {"title":
        "Version specifier", "description": "A version specifier accepts standard
        python versions syntax: `>=`, `<=`, `==`, `~=`, `>`, `<`, `!` and can be used
        in conjunction with other specifiers i.e. `>1`,`<=3`,`!=3.0.2`. Note that
        the specifiers treat pre-released versions as `<` released versions, so 3.0.0a1
        < 3.0.0. Not setting the version_specifier will sync all the pre-released
        and released versions.", "type": "string"}}}, "python.PythonRemoteRead": {"required":
        ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp
        href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name",
        "description": "A unique name for this remote.", "type": "string", "minLength":
        1}, "url": {"title": "Url", "description": "The URL of an external content
        source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert",
        "description": "A string containing the PEM encoded CA certificate used to
        validate the server certificate presented by the remote server. All new line
        characters must be escaped.", "type": "string", "minLength": 1, "x-nullable":
        true}, "client_cert": {"title": "Client cert", "description": "A string containing
        the PEM encoded client certificate used for authentication. All new line characters
        must be escaped.", "type": "string", "minLength": 1, "x-nullable": true},
        "client_key": {"title": "Client key", "description": "A PEM encoded private
        key used for authentication.", "type": "string", "minLength": 1, "x-nullable":
        true}, "tls_validation": {"title": "Tls validation", "description": "If True,
        TLS peer validation must be performed.", "type": "boolean"}, "proxy_url":
        {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port",
        "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title":
        "Username", "description": "The username to be used for authentication when
        syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password":
        {"title": "Password", "description": "The password to be used for authentication
        when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated":
        {"title": "Pulp last updated", "description": "Timestamp of the most recent
        update of the remote.", "type": "string", "format": "date-time", "readOnly":
        true}, "download_concurrency": {"title": "Download concurrency", "description":
        "Total number of simultaneous connections.", "type": "integer", "minimum":
        1}, "policy": {"title": "Policy", "description": "The policy to use when downloading
        content. The possible values include: ''immediate'', ''on_demand'', and ''cache_only''.
        ''immediate'' is the default.", "type": "string", "enum": ["immediate", "on_demand",
        "streamed"], "default": "immediate"}, "includes": {"description": "AKA \"Whitelist\".
        A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\":
        \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items":
        {"$ref": "#/definitions/ProjectSpecifier"}}, "excludes": {"description": "\"AKA
        \"Blacklist\". A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\":
        \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items":
        {"$ref": "#/definitions/ProjectSpecifier"}}, "prereleases": {"title": "Prereleases",
        "description": "Whether or not to include pre-release packages in the sync.",
        "type": "boolean"}}}, "python.PythonRemote": {"required": ["name", "url"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A
        unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title":
        "Url", "description": "The URL of an external content source.", "type": "string",
        "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string
        containing the PEM encoded CA certificate used to validate the server certificate
        presented by the remote server. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title":
        "Client cert", "description": "A string containing the PEM encoded client
        certificate used for authentication. All new line characters must be escaped.",
        "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title":
        "Client key", "description": "A PEM encoded private key used for authentication.",
        "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title":
        "Tls validation", "description": "If True, TLS peer validation must be performed.",
        "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The
        proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength":
        1, "x-nullable": true}, "username": {"title": "Username", "description": "The
        username to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "password": {"title": "Password", "description": "The
        password to be used for authentication when syncing.", "type": "string", "minLength":
        1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated",
        "description": "Timestamp of the most recent update of the remote.", "type":
        "string", "format": "date-time", "readOnly": true}, "download_concurrency":
        {"title": "Download concurrency", "description": "Total number of simultaneous
        connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy",
        "description": "The policy to use when downloading content. The possible values
        include: ''immediate'', ''on_demand'', and ''cache_only''. ''immediate'' is
        the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"],
        "default": "immediate"}, "includes": {"description": "AKA \"Whitelist\". A
        list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\":
        \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items":
        {"$ref": "#/definitions/ProjectSpecifier"}}, "excludes": {"description": "\"AKA
        \"Blacklist\". A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\":
        \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items":
        {"$ref": "#/definitions/ProjectSpecifier"}}, "prereleases": {"title": "Prereleases",
        "description": "Whether or not to include pre-release packages in the sync.",
        "type": "boolean"}}}, "ansible.AnsibleRepositoryRead": {"required": ["name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "versions_href": {"title": "Versions href",
        "type": "string", "format": "uri", "readOnly": true}, "latest_version_href":
        {"title": "Latest version href", "type": "string", "format": "uri", "readOnly":
        true}, "name": {"title": "Name", "description": "A unique name for this repository.",
        "type": "string", "minLength": 1}, "description": {"title": "Description",
        "description": "An optional description.", "type": "string", "minLength":
        1, "x-nullable": true}}}, "ansible.AnsibleRepository": {"required": ["name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "versions_href": {"title": "Versions href",
        "type": "string", "format": "uri", "readOnly": true}, "latest_version_href":
        {"title": "Latest version href", "type": "string", "format": "uri", "readOnly":
        true}, "name": {"title": "Name", "description": "A unique name for this repository.",
        "type": "string", "minLength": 1}, "description": {"title": "Description",
        "description": "An optional description.", "type": "string", "minLength":
        1, "x-nullable": true}}}, "RepositoryAddRemoveContent": {"type": "object",
        "properties": {"add_content_units": {"description": "A list of content units
        to add to a new repository version. This content is added after remove_content_units
        are removed.", "type": "array", "items": {"type": "string"}}, "remove_content_units":
        {"description": "A list of content units to remove from the latest repository
        version. You may also specify ''*'' as an entry to remove all content. This
        content is removed before add_content_units are added.", "type": "array",
        "items": {"type": "string"}}, "base_version": {"title": "Base version", "description":
        "A repository version whose content will be used as the initial set of content
        for the new repository version", "type": "string", "format": "uri"}}}, "RepositorySyncURL":
        {"required": ["remote"], "type": "object", "properties": {"remote": {"title":
        "Remote", "description": "A URI of the repository to be synchronized.", "type":
        "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If
        ``True``, synchronization will remove all content that is not present in the
        remote repository. If ``False``, sync will be additive only.", "type": "boolean",
        "default": false}}}, "ContentSummary": {"title": "Content summary", "description":
        "Various count summaries of the content in the version and the HREF to view
        them.", "required": ["added", "removed", "present"], "type": "object", "properties":
        {"added": {"title": "Added", "type": "object", "additionalProperties": {"type":
        "object", "additionalProperties": {"type": "string"}}}, "removed": {"title":
        "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties":
        {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties":
        {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersionRead":
        {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer",
        "readOnly": true}, "base_version": {"title": "Base version", "description":
        "A repository version whose content was used as the initial set of content
        for this repository version", "type": "string", "format": "uri"}, "content_summary":
        {"$ref": "#/definitions/ContentSummary"}}}, "RepositoryVersion": {"type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly":
        true}, "base_version": {"title": "Base version", "description": "A repository
        version whose content was used as the initial set of content for this repository
        version", "type": "string", "format": "uri"}, "content_summary": {"$ref":
        "#/definitions/ContentSummary"}}}, "container.ContainerRepositoryRead": {"required":
        ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions
        href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href":
        {"title": "Latest version href", "type": "string", "format": "uri", "readOnly":
        true}, "name": {"title": "Name", "description": "A unique name for this repository.",
        "type": "string", "minLength": 1}, "description": {"title": "Description",
        "description": "An optional description.", "type": "string", "minLength":
        1, "x-nullable": true}}}, "container.ContainerRepository": {"required": ["name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "versions_href": {"title": "Versions href",
        "type": "string", "format": "uri", "readOnly": true}, "latest_version_href":
        {"title": "Latest version href", "type": "string", "format": "uri", "readOnly":
        true}, "name": {"title": "Name", "description": "A unique name for this repository.",
        "type": "string", "minLength": 1}, "description": {"title": "Description",
        "description": "An optional description.", "type": "string", "minLength":
        1, "x-nullable": true}}}, "RecursiveManage": {"type": "object", "properties":
        {"content_units": {"description": "A list of content units to operate on.",
        "type": "array", "items": {"type": "string"}}}}, "ManifestCopy": {"type":
        "object", "properties": {"source_repository": {"title": "Repository", "description":
        "A URI of the repository to copy content from.", "type": "string", "format":
        "uri"}, "source_repository_version": {"title": "Source repository version",
        "description": "A URI of the repository version to copy content from.", "type":
        "string", "format": "uri"}, "digests": {"description": "A list of manifest
        digests to copy.", "type": "array", "items": {"type": "string"}}, "media_types":
        {"description": "A list of media_types to copy.", "type": "array", "items":
        {"type": "string", "enum": ["application/vnd.docker.distribution.manifest.v1+json",
        "application/vnd.docker.distribution.manifest.v2+json", "application/vnd.docker.distribution.manifest.list.v2+json",
        "application/vnd.oci.image.manifest.v1+json", "application/vnd.oci.image.index.v1+json"]}}}},
        "TagCopy": {"type": "object", "properties": {"source_repository": {"title":
        "Repository", "description": "A URI of the repository to copy content from.",
        "type": "string", "format": "uri"}, "source_repository_version": {"title":
        "Source repository version", "description": "A URI of the repository version
        to copy content from.", "type": "string", "format": "uri"}, "names": {"description":
        "A list of tag names to copy.", "type": "array", "items": {"type": "string"}}}},
        "TagImage": {"required": ["tag", "digest"], "type": "object", "properties":
        {"tag": {"title": "Tag", "description": "A tag name", "type": "string", "minLength":
        1}, "digest": {"title": "Digest", "description": "sha256 of the Manifest file",
        "type": "string", "minLength": 1}}}, "UnTagImage": {"required": ["tag"], "type":
        "object", "properties": {"tag": {"title": "Tag", "description": "A tag name",
        "type": "string", "minLength": 1}}}, "file.FileRepositoryRead": {"required":
        ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href",
        "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title":
        "Pulp created", "description": "Timestamp of creation.", "type": "string",
        "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions
        href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href":
        {"title": "Latest version href", "type": "string", "format": "uri", "readOnly":
        true}, "name": {"title": "Name", "description": "A unique name for this repository.",
        "type": "string", "minLength": 1}, "description": {"title": "Description",
        "description": "An optional description.", "type": "string", "minLength":
        1, "x-nullable": true}}}, "file.FileRepository": {"required": ["name"], "type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created",
        "description": "Timestamp of creation.", "type": "string", "format": "date-time",
        "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string",
        "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest
        version href", "type": "string", "format": "uri", "readOnly": true}, "name":
        {"title": "Name", "description": "A unique name for this repository.", "type":
        "string", "minLength": 1}, "description": {"title": "Description", "description":
        "An optional description.", "type": "string", "minLength": 1, "x-nullable":
        true}}}, "python.PythonRepositoryRead": {"required": ["name"], "type": "object",
        "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format":
        "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description":
        "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly":
        true}, "versions_href": {"title": "Versions href", "type": "string", "format":
        "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version
        href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title":
        "Name", "description": "A unique name for this repository.", "type": "string",
        "minLength": 1}, "description": {"title": "Description", "description": "An
        optional description.", "type": "string", "minLength": 1, "x-nullable": true}}},
        "python.PythonRepository": {"required": ["name"], "type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "versions_href": {"title": "Versions href", "type": "string", "format": "uri",
        "readOnly": true}, "latest_version_href": {"title": "Latest version href",
        "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name",
        "description": "A unique name for this repository.", "type": "string", "minLength":
        1}, "description": {"title": "Description", "description": "An optional description.",
        "type": "string", "minLength": 1, "x-nullable": true}}}, "SigningServiceRead":
        {"required": ["name", "script"], "type": "object", "properties": {"pulp_href":
        {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true},
        "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "name": {"title":
        "Name", "description": "A unique name used to recognize a script.", "type":
        "string", "minLength": 1}, "script": {"title": "Script", "description": "An
        absolute path to a script which is going to be used for the signing.", "type":
        "string", "minLength": 1}}}, "Version": {"description": "Version information
        of Pulp components", "required": ["component", "version"], "type": "object",
        "properties": {"component": {"title": "Component", "description": "Name of
        a versioned component of Pulp", "type": "string", "minLength": 1}, "version":
        {"title": "Version", "description": "Version of the component (e.g. 3.0.0)",
        "type": "string", "minLength": 1}}}, "Worker": {"description": "List of online
        workers known to the application. An online worker is actively heartbeating
        and can respond to new work", "type": "object", "properties": {"pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "name":
        {"title": "Name", "description": "The name of the worker.", "type": "string",
        "readOnly": true, "minLength": 1}, "last_heartbeat": {"title": "Last heartbeat",
        "description": "Timestamp of the last time the worker talked to the service.",
        "type": "string", "format": "date-time", "readOnly": true}}}, "ContentAppStatus":
        {"description": "List of online content apps known to the application. An
        online content app is actively heartbeating and can serve data to clients",
        "type": "object", "properties": {"name": {"title": "Name", "description":
        "The name of the worker.", "type": "string", "readOnly": true, "minLength":
        1}, "last_heartbeat": {"title": "Last heartbeat", "description": "Timestamp
        of the last time the worker talked to the service.", "type": "string", "format":
        "date-time", "readOnly": true}}}, "DatabaseConnection": {"title": "Database
        connection", "description": "Database connection information", "required":
        ["connected"], "type": "object", "properties": {"connected": {"title": "Connected",
        "description": "Info about whether the app can connect to the database", "type":
        "boolean"}}}, "RedisConnection": {"title": "Redis connection", "description":
        "Redis connection information", "required": ["connected"], "type": "object",
        "properties": {"connected": {"title": "Connected", "description": "Info about
        whether the app can connect to Redis", "type": "boolean"}}}, "Storage": {"title":
        "Storage", "description": "Storage information", "required": ["total", "used",
        "free"], "type": "object", "properties": {"total": {"title": "Total", "description":
        "Total number of bytes", "type": "integer", "minimum": 0}, "used": {"title":
        "Used", "description": "Number of bytes in use", "type": "integer", "minimum":
        0}, "free": {"title": "Free", "description": "Number of free bytes", "type":
        "integer", "minimum": 0}}}, "Status": {"required": ["versions", "online_workers",
        "online_content_apps", "database_connection", "redis_connection"], "type":
        "object", "properties": {"versions": {"description": "Version information
        of Pulp components", "type": "array", "items": {"$ref": "#/definitions/Version"}},
        "online_workers": {"description": "List of online workers known to the application.
        An online worker is actively heartbeating and can respond to new work", "type":
        "array", "items": {"$ref": "#/definitions/Worker"}}, "online_content_apps":
        {"description": "List of online content apps known to the application. An
        online content app is actively heartbeating and can serve data to clients",
        "type": "array", "items": {"$ref": "#/definitions/ContentAppStatus"}}, "database_connection":
        {"$ref": "#/definitions/DatabaseConnection"}, "redis_connection": {"$ref":
        "#/definitions/RedisConnection"}, "storage": {"$ref": "#/definitions/Storage"}}},
        "TaskGroupRead": {"required": ["description", "all_tasks_dispatched"], "type":
        "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string",
        "format": "uri", "readOnly": true}, "description": {"title": "Description",
        "description": "A description of the task group.", "type": "string", "minLength":
        1}, "all_tasks_dispatched": {"title": "All tasks dispatched", "description":
        "Whether all tasks have been spawned for this task group.", "type": "boolean"},
        "waiting": {"title": "Waiting", "description": "Number of tasks in the ''waiting''
        state", "type": "integer", "readOnly": true}, "skipped": {"title": "Skipped",
        "description": "Number of tasks in the ''skipped'' state", "type": "integer",
        "readOnly": true}, "running": {"title": "Running", "description": "Number
        of tasks in the ''running'' state", "type": "integer", "readOnly": true},
        "completed": {"title": "Completed", "description": "Number of tasks in the
        ''completed'' state", "type": "integer", "readOnly": true}, "canceled": {"title":
        "Canceled", "description": "Number of tasks in the ''canceled'' state", "type":
        "integer", "readOnly": true}, "failed": {"title": "Failed", "description":
        "Number of tasks in the ''failed'' state", "type": "integer", "readOnly":
        true}}}, "ProgressReport": {"type": "object", "properties": {"message": {"title":
        "Message", "description": "The message shown to the user for the progress
        report.", "type": "string", "readOnly": true, "minLength": 1}, "code": {"title":
        "Code", "description": "Identifies the type of progress report''.", "type":
        "string", "readOnly": true, "minLength": 1}, "state": {"title": "State", "description":
        "The current state of the progress report. The possible values are: ''waiting'',
        ''skipped'', ''running'', ''completed'', ''failed'' and ''canceled''. The
        default is ''waiting''.", "type": "string", "readOnly": true, "minLength":
        1}, "total": {"title": "Total", "description": "The total count of items.",
        "type": "integer", "readOnly": true}, "done": {"title": "Done", "description":
        "The count of items already processed. Defaults to 0.", "type": "integer",
        "readOnly": true}, "suffix": {"title": "Suffix", "description": "The suffix
        to be shown with the progress report.", "type": "string", "readOnly": true,
        "minLength": 1, "x-nullable": true}}}, "ReservedResources": {"type": "object",
        "properties": {}}, "TaskRead": {"required": ["name"], "type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "state": {"title": "State", "description": "The current state of the task.
        The possible values include: ''waiting'', ''skipped'', ''running'', ''completed'',
        ''failed'' and ''canceled''.", "type": "string", "readOnly": true, "minLength":
        1}, "name": {"title": "Name", "description": "The name of task.", "type":
        "string", "minLength": 1}, "started_at": {"title": "Started at", "description":
        "Timestamp of the when this task started execution.", "type": "string", "format":
        "date-time", "readOnly": true}, "finished_at": {"title": "Finished at", "description":
        "Timestamp of the when this task stopped execution.", "type": "string", "format":
        "date-time", "readOnly": true}, "error": {"title": "Error", "description":
        "A JSON Object of a fatal error encountered during the execution of this task.",
        "type": "object", "additionalProperties": {"type": "object"}, "readOnly":
        true}, "worker": {"title": "Worker", "description": "The worker associated
        with this task. This field is empty if a worker is not yet assigned.", "type":
        "string", "format": "uri", "readOnly": true}, "parent_task": {"title": "Parent
        task", "description": "The parent task that spawned this task.", "type": "string",
        "format": "uri", "readOnly": true}, "child_tasks": {"description": "Any tasks
        spawned by this task.", "type": "array", "items": {"description": "Any tasks
        spawned by this task.", "type": "string", "format": "uri"}, "readOnly": true,
        "uniqueItems": true}, "task_group": {"title": "Task group", "description":
        "The task group that this task is a member of.", "type": "string", "format":
        "uri", "readOnly": true}, "progress_reports": {"type": "array", "items": {"$ref":
        "#/definitions/ProgressReport"}, "readOnly": true}, "created_resources": {"description":
        "Resources created by this task.", "type": "array", "items": {"description":
        "Resources created by this task.", "type": "string", "format": "uri"}, "readOnly":
        true, "uniqueItems": true}, "reserved_resources_record": {"type": "array",
        "items": {"$ref": "#/definitions/ReservedResources"}, "readOnly": true}}},
        "TaskCancel": {"required": ["state"], "type": "object", "properties": {"state":
        {"title": "State", "description": "The desired state of the task. Only ''canceled''
        is accepted.", "type": "string", "minLength": 1}}}, "Task": {"required": ["name"],
        "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type":
        "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp
        created", "description": "Timestamp of creation.", "type": "string", "format":
        "date-time", "readOnly": true}, "state": {"title": "State", "description":
        "The current state of the task. The possible values include: ''waiting'',
        ''skipped'', ''running'', ''completed'', ''failed'' and ''canceled''.", "type":
        "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description":
        "The name of task.", "type": "string", "minLength": 1}, "started_at": {"title":
        "Started at", "description": "Timestamp of the when this task started execution.",
        "type": "string", "format": "date-time", "readOnly": true}, "finished_at":
        {"title": "Finished at", "description": "Timestamp of the when this task stopped
        execution.", "type": "string", "format": "date-time", "readOnly": true}, "error":
        {"title": "Error", "description": "A JSON Object of a fatal error encountered
        during the execution of this task.", "type": "object", "additionalProperties":
        {"type": "object"}, "readOnly": true}, "worker": {"title": "Worker", "description":
        "The worker associated with this task. This field is empty if a worker is
        not yet assigned.", "type": "string", "format": "uri", "readOnly": true},
        "parent_task": {"title": "Parent task", "description": "The parent task that
        spawned this task.", "type": "string", "format": "uri", "readOnly": true},
        "child_tasks": {"description": "Any tasks spawned by this task.", "type":
        "array", "items": {"description": "Any tasks spawned by this task.", "type":
        "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}, "task_group":
        {"title": "Task group", "description": "The task group that this task is a
        member of.", "type": "string", "format": "uri", "readOnly": true}, "progress_reports":
        {"type": "array", "items": {"$ref": "#/definitions/ProgressReport"}, "readOnly":
        true}, "created_resources": {"description": "Resources created by this task.",
        "type": "array", "items": {"description": "Resources created by this task.",
        "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true},
        "reserved_resources_record": {"type": "array", "items": {"$ref": "#/definitions/ReservedResources"},
        "readOnly": true}}}, "UploadRead": {"required": ["size"], "type": "object",
        "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format":
        "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description":
        "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly":
        true}, "size": {"title": "Size", "description": "The size of the upload in
        bytes.", "type": "integer"}, "completed": {"title": "Completed", "description":
        "Timestamp when upload is committed.", "type": "string", "format": "date-time",
        "readOnly": true}}}, "Upload": {"required": ["size"], "type": "object", "properties":
        {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly":
        true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp
        of creation.", "type": "string", "format": "date-time", "readOnly": true},
        "size": {"title": "Size", "description": "The size of the upload in bytes.",
        "type": "integer"}, "completed": {"title": "Completed", "description": "Timestamp
        when upload is committed.", "type": "string", "format": "date-time", "readOnly":
        true}}}, "UploadChunk": {"type": "object", "properties": {"file": {"title":
        "File", "description": "A chunk of the uploaded file.", "type": "string",
        "readOnly": true}, "sha256": {"title": "Sha256", "description": "The SHA-256
        checksum of the chunk if available.", "type": "string", "minLength": 1, "x-nullable":
        true}, "offset": {"title": "Offset", "type": "integer", "readOnly": true},
        "size": {"title": "Size", "type": "integer", "readOnly": true}}}, "UploadDetailRead":
        {"required": ["size"], "type": "object", "properties": {"pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created":
        {"title": "Pulp created", "description": "Timestamp of creation.", "type":
        "string", "format": "date-time", "readOnly": true}, "size": {"title": "Size",
        "description": "The size of the upload in bytes.", "type": "integer"}, "completed":
        {"title": "Completed", "description": "Timestamp when upload is committed.",
        "type": "string", "format": "date-time", "readOnly": true}, "chunks": {"type":
        "array", "items": {"$ref": "#/definitions/UploadChunk"}, "readOnly": true}}},
        "UploadCommit": {"required": ["sha256"], "type": "object", "properties": {"sha256":
        {"title": "Sha256", "description": "The expected sha256 checksum for the file.",
        "type": "string", "minLength": 1}}}, "WorkerRead": {"type": "object", "properties":
        {"pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.",
        "type": "string", "format": "date-time", "readOnly": true}, "pulp_href": {"title":
        "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "name":
        {"title": "Name", "description": "The name of the worker.", "type": "string",
        "readOnly": true, "minLength": 1}, "last_heartbeat": {"title": "Last heartbeat",
        "description": "Timestamp of the last time the worker talked to the service.",
        "type": "string", "format": "date-time", "readOnly": true}}}, "GalaxyRoleRead":
        {"required": ["name", "namespace"], "type": "object", "properties": {"id":
        {"title": "Id", "type": "string", "readOnly": true}, "name": {"title": "Name",
        "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type":
        "string", "minLength": 1}}}, "GalaxyRoleVersionRead": {"required": ["name"],
        "type": "object", "properties": {"name": {"title": "Name", "type": "string",
        "minLength": 1}, "source": {"title": "Source", "type": "string", "readOnly":
        true}}}, "CollectionImportDetailRead": {"required": ["id", "state", "created_at",
        "updated_at", "started_at", "finished_at", "error", "messages"], "type": "object",
        "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"},
        "state": {"title": "State", "type": "string", "minLength": 1}, "created_at":
        {"title": "Created at", "type": "string", "format": "date-time"}, "updated_at":
        {"title": "Updated at", "type": "string", "format": "date-time"}, "started_at":
        {"title": "Started at", "type": "string", "format": "date-time"}, "finished_at":
        {"title": "Finished at", "type": "string", "format": "date-time"}, "error":
        {"title": "Error", "type": "object"}, "messages": {"title": "Messages", "type":
        "object"}}}, "GalaxyCollectionRead": {"required": ["name", "namespace"], "type":
        "object", "properties": {"name": {"title": "Name", "type": "string", "minLength":
        1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1},
        "href": {"title": "Href", "type": "string", "readOnly": true}, "versions_url":
        {"title": "Versions url", "type": "string", "readOnly": true}}}, "GalaxyCollection":
        {"required": ["name", "namespace"], "type": "object", "properties": {"name":
        {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title":
        "Namespace", "type": "string", "minLength": 1}, "href": {"title": "Href",
        "type": "string", "readOnly": true}, "versions_url": {"title": "Versions url",
        "type": "string", "readOnly": true}}}, "CollectionMetadata": {"title": "Metadata",
        "required": ["tags"], "type": "object", "properties": {"authors": {"type":
        "array", "items": {"title": "Authors", "type": "string", "maxLength": 64,
        "minLength": 1}, "readOnly": true}, "contents": {"title": "Contents", "type":
        "object", "readOnly": true}, "dependencies": {"title": "Dependencies", "type":
        "object", "readOnly": true}, "description": {"title": "Description", "type":
        "string", "readOnly": true, "minLength": 1}, "documentation": {"title": "Documentation",
        "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "homepage":
        {"title": "Homepage", "type": "string", "format": "uri", "readOnly": true,
        "minLength": 1}, "issues": {"title": "Issues", "type": "string", "format":
        "uri", "readOnly": true, "minLength": 1}, "license": {"type": "array", "items":
        {"title": "License", "type": "string", "maxLength": 32, "minLength": 1}, "readOnly":
        true}, "repository": {"title": "Repository", "type": "string", "format": "uri",
        "readOnly": true, "minLength": 1}, "tags": {"type": "array", "items": {"type":
        "string"}, "uniqueItems": true}}}, "GalaxyCollectionVersionRead": {"required":
        ["version", "metadata"], "type": "object", "properties": {"version": {"title":
        "Version", "type": "string", "minLength": 1}, "href": {"title": "Href", "type":
        "string", "readOnly": true}, "namespace": {"title": "Namespace", "type": "string",
        "readOnly": true}, "collection": {"title": "Collection", "type": "string",
        "readOnly": true}, "artifact": {"title": "Artifact", "type": "string", "readOnly":
        true}, "metadata": {"$ref": "#/definitions/CollectionMetadata"}}}, "CollectionRead":
        {"required": ["created_at", "updated_at", "deprecated"], "type": "object",
        "properties": {"href": {"title": "Href", "type": "string", "readOnly": true},
        "created_at": {"title": "Created at", "type": "string", "format": "date-time"},
        "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"},
        "namespace": {"title": "Namespace", "type": "string", "readOnly": true, "minLength":
        1}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength":
        1}, "deprecated": {"title": "Deprecated", "type": "boolean"}, "versions_url":
        {"title": "Versions url", "type": "string", "readOnly": true}, "highest_version":
        {"title": "Highest version", "type": "string", "readOnly": true}}}, "Collection":
        {"required": ["created_at", "updated_at", "deprecated"], "type": "object",
        "properties": {"href": {"title": "Href", "type": "string", "readOnly": true},
        "created_at": {"title": "Created at", "type": "string", "format": "date-time"},
        "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"},
        "namespace": {"title": "Namespace", "type": "string", "readOnly": true, "minLength":
        1}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength":
        1}, "deprecated": {"title": "Deprecated", "type": "boolean"}, "versions_url":
        {"title": "Versions url", "type": "string", "readOnly": true}, "highest_version":
        {"title": "Highest version", "type": "string", "readOnly": true}}}, "CollectionRef":
        {"title": "Collection", "required": ["id", "name"], "type": "object", "properties":
        {"id": {"title": "Id", "type": "string", "minLength": 1}, "name": {"title":
        "Name", "type": "string", "minLength": 1}, "href": {"title": "Href", "type":
        "string", "readOnly": true}}}, "CollectionNamespace": {"title": "Namespace",
        "required": ["name"], "type": "object", "properties": {"name": {"title": "Name",
        "type": "string", "minLength": 1}}}, "CollectionVersionRead": {"required":
        ["created_at", "updated_at"], "type": "object", "properties": {"version":
        {"title": "Version", "type": "string", "readOnly": true, "minLength": 1},
        "certification": {"title": "Certification", "type": "string", "enum": ["certified",
        "not_certified", "needs_review"]}, "href": {"title": "Href", "type": "string",
        "readOnly": true}, "created_at": {"title": "Created at", "type": "string",
        "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string",
        "format": "date-time"}, "artifact": {"title": "Artifact", "type": "string",
        "readOnly": true}, "collection": {"$ref": "#/definitions/CollectionRef"},
        "download_url": {"title": "Download url", "type": "string", "readOnly": true},
        "name": {"title": "Name", "type": "string", "readOnly": true, "minLength":
        1}, "namespace": {"$ref": "#/definitions/CollectionNamespace"}, "metadata":
        {"$ref": "#/definitions/CollectionMetadata"}}}, "CollectionVersion": {"required":
        ["created_at", "updated_at"], "type": "object", "properties": {"version":
        {"title": "Version", "type": "string", "readOnly": true, "minLength": 1},
        "certification": {"title": "Certification", "type": "string", "enum": ["certified",
        "not_certified", "needs_review"]}, "href": {"title": "Href", "type": "string",
        "readOnly": true}, "created_at": {"title": "Created at", "type": "string",
        "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string",
        "format": "date-time"}, "artifact": {"title": "Artifact", "type": "string",
        "readOnly": true}, "collection": {"$ref": "#/definitions/CollectionRef"},
        "download_url": {"title": "Download url", "type": "string", "readOnly": true},
        "name": {"title": "Name", "type": "string", "readOnly": true, "minLength":
        1}, "namespace": {"$ref": "#/definitions/CollectionNamespace"}, "metadata":
        {"$ref": "#/definitions/CollectionMetadata"}}}}, "tags": [{"name": "ansible:
        collections", "x-displayName": "Ansible: Collections"}, {"name": "artifacts",
        "x-displayName": "Artifacts"}, {"name": "content: collection_versions", "x-displayName":
        "Content: Collection_Versions"}, {"name": "content: roles", "x-displayName":
        "Content: Roles"}, {"name": "content: blobs", "x-displayName": "Content: Blobs"},
        {"name": "content: manifests", "x-displayName": "Content: Manifests"}, {"name":
        "content: tags", "x-displayName": "Content: Tags"}, {"name": "content: files",
        "x-displayName": "Content: Files"}, {"name": "content: packages", "x-displayName":
        "Content: Packages"}, {"name": "contentguards: rhsm", "x-displayName": "Contentguards:
        Rhsm"}, {"name": "contentguards: x509", "x-displayName": "Contentguards: X509"},
        {"name": "distributions: ansible", "x-displayName": "Distributions: Ansible"},
        {"name": "distributions: container", "x-displayName": "Distributions: Container"},
        {"name": "distributions: file", "x-displayName": "Distributions: File"}, {"name":
        "distributions: pypi", "x-displayName": "Distributions: Pypi"}, {"name": "exporters:
        pulp", "x-displayName": "Exporters: Pulp"}, {"name": "exporters: core exports",
        "x-displayName": "Exporters: Core Exports"}, {"name": "exporters: filesystem",
        "x-displayName": "Exporters: Filesystem"}, {"name": "exporters: file exports",
        "x-displayName": "Exporters: File Exports"}, {"name": "importers: pulp", "x-displayName":
        "Importers: Pulp"}, {"name": "importers: core imports", "x-displayName": "Importers:
        Core Imports"}, {"name": "orphans", "x-displayName": "Orphans"}, {"name":
        "publications: file", "x-displayName": "Publications: File"}, {"name": "publications:
        pypi", "x-displayName": "Publications: Pypi"}, {"name": "pulp_ansible: tags",
        "x-displayName": "Pulp_Ansible: Tags"}, {"name": "remotes: ansible", "x-displayName":
        "Remotes: Ansible"}, {"name": "remotes: collection", "x-displayName": "Remotes:
        Collection"}, {"name": "remotes: container", "x-displayName": "Remotes: Container"},
        {"name": "remotes: file", "x-displayName": "Remotes: File"}, {"name": "remotes:
        python", "x-displayName": "Remotes: Python"}, {"name": "repositories: ansible",
        "x-displayName": "Repositories: Ansible"}, {"name": "repositories: ansible
        versions", "x-displayName": "Repositories: Ansible Versions"}, {"name": "repositories:
        container", "x-displayName": "Repositories: Container"}, {"name": "repositories:
        container versions", "x-displayName": "Repositories: Container Versions"},
        {"name": "repositories: file", "x-displayName": "Repositories: File"}, {"name":
        "repositories: file versions", "x-displayName": "Repositories: File Versions"},
        {"name": "repositories: python", "x-displayName": "Repositories: Python"},
        {"name": "repositories: python versions", "x-displayName": "Repositories:
        Python Versions"}, {"name": "signing-services", "x-displayName": "Signing-Services"},
        {"name": "status", "x-displayName": "Status"}, {"name": "task-groups", "x-displayName":
        "Task-Groups"}, {"name": "tasks", "x-displayName": "Tasks"}, {"name": "uploads",
        "x-displayName": "Uploads"}, {"name": "workers", "x-displayName": "Workers"},
        {"name": "pulp_ansible: api", "x-displayName": "Pulp_Ansible: Api"}, {"name":
        "pulp_ansible: galaxy api roles", "x-displayName": "Pulp_Ansible: Galaxy Api
        Roles"}, {"name": "pulp_ansible: galaxy api v1 versions", "x-displayName":
        "Pulp_Ansible: Galaxy Api V1 Versions"}, {"name": "pulp_ansible: galaxy api
        collection-imports", "x-displayName": "Pulp_Ansible: Galaxy Api Collection-Imports"},
        {"name": "pulp_ansible: galaxy api collections", "x-displayName": "Pulp_Ansible:
        Galaxy Api Collections"}, {"name": "pulp_ansible: galaxy api v2 versions",
        "x-displayName": "Pulp_Ansible: Galaxy Api V2 Versions"}, {"name": "pulp_ansible:
        galaxy api v3 collections", "x-displayName": "Pulp_Ansible: Galaxy Api V3
        Collections"}, {"name": "pulp_ansible: galaxy api v3 versions", "x-displayName":
        "Pulp_Ansible: Galaxy Api V3 Versions"}]}'
    headers:
      Allow:
      - GET, HEAD, OPTIONS
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Connection:
      - close
      Content-Length:
      - '309362'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 07 Aug 2020 11:34:29 GMT
      Expires:
      - Fri, 07 Aug 2020 11:44:25 GMT
      Server:
      - nginx/1.14.2
      Vary:
      - Accept, Cookie, Authorization
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Type:
      - application/json
      Host:
      - pulp3-sandbox-debian10
      User-Agent:
      - Python-urllib/3.8
    method: GET
    uri: http://pulp.example.org/pulp/api/v3/repositories/file/file/?limit=1&name=test_file_repository
  response:
    body:
      string: '{"count":1,"next":null,"previous":null,"results":[{"pulp_href":"/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/","pulp_created":"2020-08-07T11:34:25.568644Z","versions_href":"/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/","latest_version_href":"/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/","name":"test_file_repository","description":null}]}'
    headers:
      Allow:
      - GET, POST, HEAD, OPTIONS
      Connection:
      - close
      Content-Length:
      - '445'
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Aug 2020 11:34:29 GMT
      Server:
      - nginx/1.14.2
      Vary:
      - Accept, Cookie
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Type:
      - application/json
      Host:
      - pulp3-sandbox-debian10
      User-Agent:
      - Python-urllib/3.8
    method: GET
    uri: http://pulp.example.org/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/
  response:
    body:
      string: '{"pulp_href":"/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/","pulp_created":"2020-08-07T11:34:26.538189Z","number":1,"base_version":null,"content_summary":{"added":{"file.file":{"count":3,"href":"/pulp/api/v3/content/file/files/?repository_version_added=/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/"}},"removed":{},"present":{"file.file":{"count":3,"href":"/pulp/api/v3/content/file/files/?repository_version=/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/"}}}}'
    headers:
      Allow:
      - GET, DELETE, HEAD, OPTIONS
      Connection:
      - close
      Content-Length:
      - '577'
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Aug 2020 11:34:29 GMT
      Server:
      - nginx/1.14.2
      Vary:
      - Accept, Cookie
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Type:
      - application/json
      Host:
      - pulp3-sandbox-debian10
      User-Agent:
      - Python-urllib/3.8
    method: POST
    uri: http://pulp.example.org/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/versions/1/repair/
  response:
    body:
      string: '{"task":"/pulp/api/v3/tasks/26844624-4d39-4011-a554-bcfd073b0a6c/"}'
    headers:
      Allow:
      - POST, OPTIONS
      Connection:
      - close
      Content-Length:
      - '67'
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Aug 2020 11:34:29 GMT
      Server:
      - nginx/1.14.2
      Vary:
      - Accept, Cookie
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Type:
      - application/json
      Host:
      - pulp3-sandbox-debian10
      User-Agent:
      - Python-urllib/3.8
    method: GET
    uri: http://pulp.example.org/pulp/api/v3/tasks/26844624-4d39-4011-a554-bcfd073b0a6c/
  response:
    body:
      string: '{"pulp_href":"/pulp/api/v3/tasks/26844624-4d39-4011-a554-bcfd073b0a6c/","pulp_created":"2020-08-07T11:34:29.464398Z","state":"completed","name":"pulpcore.app.tasks.repository.repair_version","started_at":"2020-08-07T11:34:29.545018Z","finished_at":"2020-08-07T11:34:29.569391Z","error":null,"worker":"/pulp/api/v3/workers/e1286e24-ae5d-440d-983f-3b846ca44568/","parent_task":null,"child_tasks":[],"task_group":null,"progress_reports":[{"message":"Repair
        corrupted units","code":"repair.repaired","state":"completed","total":null,"done":0,"suffix":null},{"message":"Identify
        corrupted units","code":"repair.corrupted","state":"completed","total":null,"done":0,"suffix":null}],"created_resources":[],"reserved_resources_record":["/pulp/api/v3/repositories/file/file/e9d4be3b-fdcc-49c3-b7eb-fb7d5a8fb64a/"]}'
    headers:
      Allow:
      - GET, PATCH, DELETE, HEAD, OPTIONS
      Connection:
      - close
      Content-Length:
      - '804'
      Content-Type:
      - application/json
      Date:
      - Fri, 07 Aug 2020 11:34:29 GMT
      Server:
      - nginx/1.14.2
      Vary:
      - Accept, Cookie
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
version: 1
